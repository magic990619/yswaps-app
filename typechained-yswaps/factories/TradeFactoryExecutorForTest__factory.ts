/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { TradeFactoryExecutorForTest, TradeFactoryExecutorForTestInterface } from '../TradeFactoryExecutorForTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_masterAdmin',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_swapperAdder',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_swapperSetter',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_strategyModifier',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_mechanicsRegistry',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AllowanceShouldBeZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidAmountOut',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidSwapper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTrade',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotAsyncSwapper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSyncSwapper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SwapperInUse',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroSlippage',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_receivedAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'AsyncTradeExecuted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256[]',
        name: '_receivedAmount',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'MultipleAsyncTradeExecuted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_receivedAmount',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'SyncTradeExecuted',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MASTER_ADMIN',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STRATEGY',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STRATEGY_MANAGER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SWAPPER_ADDER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SWAPPER_SETTER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'addSwapperInternal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
    ],
    name: 'addSwapperToStrategyInternal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '__swappers',
        type: 'address[]',
      },
    ],
    name: 'addSwappers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenOut',
        type: 'address',
      },
    ],
    name: 'disable',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenOut',
        type: 'address',
      },
    ],
    name: 'disableByAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenOut',
        type: 'address',
      },
    ],
    name: 'enable',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enabledTrades',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: '_strategy',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenOut',
            type: 'address',
          },
        ],
        internalType: 'struct ITradeFactoryPositionsHandler.EnabledTrade[]',
        name: '_enabledTrades',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: '_strategy',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenOut',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: '_amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: '_minAmountOut',
            type: 'uint256',
          },
        ],
        internalType: 'struct ITradeFactoryExecutor.AsyncTradeExecutionDetails',
        name: '_tradeExecutionDetails',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [
      {
        internalType: 'uint256',
        name: '_receivedAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: '_tokenIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenOut',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: '_amountIn',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: '_maxSlippage',
            type: 'uint256',
          },
        ],
        internalType: 'struct ITradeFactoryExecutor.SyncTradeExecutionDetails',
        name: '_tradeExecutionDetails',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [
      {
        internalType: 'uint256',
        name: '_receivedAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: '_strategy',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenOut',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: '_amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: '_minAmountOut',
            type: 'uint256',
          },
        ],
        internalType: 'struct ITradeFactoryExecutor.AsyncTradeExecutionDetails[]',
        name: '_tradesExecutionDetails',
        type: 'tuple[]',
      },
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_mechanic',
        type: 'address',
      },
    ],
    name: 'isMechanic',
    outputs: [
      {
        internalType: 'bool',
        name: '_isMechanic',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'isSwapper',
    outputs: [
      {
        internalType: 'bool',
        name: '_isSwapper',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mechanicsRegistry',
    outputs: [
      {
        internalType: 'address',
        name: '_mechanicRegistry',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
    ],
    name: 'removeSwapperFromStrategyInternal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'removeSwapperInternal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '__swappers',
        type: 'address[]',
      },
    ],
    name: 'removeSwappers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '__mechanicsRegistry',
        type: 'address',
      },
    ],
    name: 'setMechanicsRegistry',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'setStrategySyncSwapper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'strategySyncSwapper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'swapperStrategies',
    outputs: [
      {
        internalType: 'address[]',
        name: '_strategies',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'swappers',
    outputs: [
      {
        internalType: 'address[]',
        name: '_swappersList',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040516200335b3803806200335b833981016040819052620000349162000393565b808086868686808484848181846001600160a01b038116620000695760405163d92e233d60e01b815260040160405180910390fd5b620000846000805160206200333b8339815191528062000259565b6200009f6000805160206200333b83398151915282620002a4565b506001600160a01b0382161580620000be57506001600160a01b038116155b15620000dd5760405163d92e233d60e01b815260040160405180910390fd5b62000107600080516020620032fb8339815191526000805160206200333b83398151915262000259565b620001427fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b9116000805160206200333b83398151915262000259565b6200015d600080516020620032fb83398151915283620002a4565b620001897fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b91182620002a4565b50505050506001600160a01b038116620001b65760405163d92e233d60e01b815260040160405180910390fd5b620001f17f49e347583a7b9e7f325e8963ee1f94127eba81e401796874b5a22f7c8f9d45f76000805160206200331b83398151915262000259565b6200021b6000805160206200331b8339815191526000805160206200333b83398151915262000259565b620002366000805160206200331b83398151915282620002a4565b50505050506200024c81620002b460201b60201c565b5050505050505062000403565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b620002b08282620002d6565b5050565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620002b0576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620003323390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b80516001600160a01b03811681146200038e57600080fd5b919050565b600080600080600060a08688031215620003ac57600080fd5b620003b78662000376565b9450620003c76020870162000376565b9350620003d76040870162000376565b9250620003e76060870162000376565b9150620003f76080870162000376565b90509295509295909350565b612ee880620004136000396000f3fe608060405234801561001057600080fd5b50600436106101fa5760003560e01c8063687020d81161011a578063bbeee591116100ad578063d547741f1161007c578063d547741f146104a7578063e454a5ed146104ba578063ef47da6d146104e1578063f1071c81146104f4578063f7bd381f1461050757600080fd5b8063bbeee59114610450578063bc90fa0314610463578063cbf8e6c414610476578063ccf61a411461047e57600080fd5b80639cd38be5116100e95780639cd38be5146103fb5780639fc2c4761461040e578063a217fddf14610435578063b64230ba1461043d57600080fd5b8063687020d81461039b578063851b3288146103c2578063907ab008146103d557806391d14854146103e857600080fd5b806336568abe116101925780634d1dd98f116101615780634d1dd98f1461032c57806350425491146103535780635163b4771461037357806365834acc1461038857600080fd5b806336568abe146102e05780633c8888fa146102f35780634a2c1bab146103065780634c8541261461031957600080fd5b8063185025ef116101ce578063185025ef1461028257806319b44cd914610297578063248a9ca3146102aa5780632f2ff15d146102cd57600080fd5b8062b8ff92146101ff57806301ffc9a7146102145780631078f3881461023c57806311eff09c14610261575b600080fd5b61021261020d366004612747565b61051a565b005b61022761022236600461278a565b6105ae565b60405190151581526020015b60405180910390f35b6009546001600160a01b03165b6040516001600160a01b039091168152602001610233565b61027461026f3660046127fd565b6105e5565b604051908152602001610233565b610274600080516020612e9383398151915281565b6102746102a5366004612866565b610ab5565b6102746102b83660046128c1565b60009081526020819052604090206001015490565b6102126102db3660046128da565b610da8565b6102126102ee3660046128da565b610dd3565b610212610301366004612906565b610e51565b610212610314366004612946565b610e73565b610212610327366004612906565b610f37565b6102747fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b91181565b610366610361366004612a0b565b610ffb565b6040516102339190612a26565b61037b61101f565b6040516102339190612a73565b610227610396366004612a0b565b6112d9565b6102747f038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd981565b6102126103d0366004612a0b565b611357565b6102126103e3366004612946565b611362565b6102276103f63660046128da565b611440565b610212610409366004612906565b611469565b6102747f1893e1a169e79f2fe8aa327b1bceb2fede7a1b76a54824f95ea0e737720954ae81565b610274600081565b61022761044b366004612a0b565b61148d565b61021261045e366004612adb565b61149a565b610212610471366004612906565b611b44565b610366611b66565b61024961048c366004612a0b565b6004602052600090815260409020546001600160a01b031681565b6102126104b53660046128da565b611b77565b6102747f0b43cb2c88b4e8fc5d4ac1352ba889b22584df0c58c4b5b589731a1c9f6f29d381565b6102126104ef366004612a0b565b611b9d565b610212610502366004612a0b565b611be7565b610212610515366004612906565b611bf2565b7f1893e1a169e79f2fe8aa327b1bceb2fede7a1b76a54824f95ea0e737720954ae6105458133611dbd565b60405163abb347a960e01b81526001600160a01b038481166004830152838116602483015285169063abb347a990604401600060405180830381600087803b15801561059057600080fd5b505af11580156105a4573d6000803e3d6000fd5b5050505050505050565b60006001600160e01b03198216637965db0b60e01b14806105df57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600954604051631960d2b360e21b81523360048201526000916001600160a01b0316906365834acc9060240160206040518083038186803b15801561062957600080fd5b505afa15801561063d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106619190612b8d565b6106ac5760405162461bcd60e51b81526020600482015260176024820152764d616368696e6572793a206e6f74206d656368616e696360481b60448201526064015b60405180910390fd5b6107246106bf6060870160408801612a0b565b600860006106d060208a018a612a0b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906107059190612a0b565b6001600160a01b03168152602081019190915260400160002090611e21565b6107415760405163d69b537960e01b815260040160405180910390fd5b61074c600185611e21565b610769576040516364a7bd4d60e11b815260040160405180910390fd5b6000606086013561081b576107846040870160208801612a0b565b6001600160a01b03166370a0823161079f6020890189612a0b565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156107de57600080fd5b505afa1580156107f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108169190612baf565b610821565b85606001355b90506108566108336020880188612a0b565b868361084560408b0160208c01612a0b565b6001600160a01b0316929190611e46565b60006108686060880160408901612a0b565b6001600160a01b03166370a0823161088360208a018a612a0b565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156108c257600080fd5b505afa1580156108d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fa9190612baf565b90506001600160a01b03861663a5d4096b61091860208a018a612a0b565b61092860408b0160208c01612a0b565b61093860608c0160408d01612a0b565b868c608001358b8b6040518863ffffffff1660e01b81526004016109629796959493929190612bf1565b600060405180830381600087803b15801561097c57600080fd5b505af1158015610990573d6000803e3d6000fd5b508392506109a79150506060890160408a01612a0b565b6001600160a01b03166370a082316109c260208b018b612a0b565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b158015610a0157600080fd5b505afa158015610a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a399190612baf565b610a439190612c57565b92508660800135831015610a6a576040516309d2d38b60e31b815260040160405180910390fd5b604080518481526001600160a01b03881660208201527feb6edbd932a6290d7ca794a21b27f2da7d46b0f9aa0cde6135ce1d0469ad144e910160405180910390a15050949350505050565b6000600080516020612e93833981519152610ad08133611dbd565b3360009081526004602090815260408220546001600160a01b03169190610af990880188612a0b565b6001600160a01b03161480610b2657506000610b1b6040880160208901612a0b565b6001600160a01b0316145b15610b445760405163d92e233d60e01b815260040160405180910390fd5b6040860135610b6657604051631f2a200560e01b815260040160405180910390fd5b6060860135610b8857604051635380c59d60e01b815260040160405180910390fd5b610b9f3382604089013561084560208b018b612a0b565b6000610bb16040880160208901612a0b565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015610bf257600080fd5b505afa158015610c06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2a9190612baf565b90506001600160a01b03821663a5d4096b33610c4960208b018b612a0b565b610c5960408c0160208d01612a0b565b8b604001358c606001358c8c6040518863ffffffff1660e01b8152600401610c879796959493929190612bf1565b600060405180830381600087803b158015610ca157600080fd5b505af1158015610cb5573d6000803e3d6000fd5b50839250610ccc9150506040890160208a01612a0b565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015610d0d57600080fd5b505afa158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d459190612baf565b610d4f9190612c57565b9350816001600160a01b0316336001600160a01b03167f77afa6671ccb5a39d59afc769ee32cdfdc0e4d7b9bbc32a0092a27843a74e64486604051610d9691815260200190565b60405180910390a35050509392505050565b600082815260208190526040902060010154610dc48133611dbd565b610dce8383611ea0565b505050565b6001600160a01b0381163314610e435760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106a3565b610e4d8282611f24565b5050565b6001600160a01b0382166000908152600360205260409020610dce9082611f89565b7f038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd9610e9e8133611dbd565b60005b8251811015610dce5760006001600160a01b0316838281518110610ec757610ec7612c6e565b60200260200101516001600160a01b03161415610ef75760405163d92e233d60e01b815260040160405180910390fd5b610f24838281518110610f0c57610f0c612c6e565b60200260200101516001611f8990919063ffffffff16565b5080610f2f81612c84565b915050610ea1565b600080516020612e93833981519152610f508133611dbd565b6001600160a01b0383161580610f6d57506001600160a01b038216155b15610f8b5760405163d92e233d60e01b815260040160405180910390fd5b610f96600533611f89565b50336000908152600760205260409020610fb09084611f89565b503360009081526008602090815260408083206001600160a01b03871684529091529020610fde9083611f89565b610dce5760405163d69b537960e01b815260040160405180910390fd5b6001600160a01b03811660009081526003602052604090206060906105df90611f9e565b60606000805b61102f6005611f9e565b518110156110fe576000611044600583611fab565b6001600160a01b03811660009081526007602052604081209192509061106990611f9e565b905060005b81518110156110e857600082828151811061108b5761108b612c6e565b6020908102919091018101516001600160a01b0380871660009081526008845260408082209284168252919093529091209091506110c890611fb7565b6110d29087612c9f565b95505080806110e090612c84565b91505061106e565b50505080806110f690612c84565b915050611025565b508067ffffffffffffffff81111561111857611118612930565b60405190808252806020026020018201604052801561116357816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816111365790505b5091506000805b6111746005611f9e565b518110156112d3576000611189600583611fab565b6001600160a01b0381166000908152600760205260408120919250906111ae90611f9e565b905060005b81518110156112bd5760008282815181106111d0576111d0612c6e565b6020908102919091018101516001600160a01b038087166000908152600884526040808220928416825291909352822090925061120c90611f9e565b905060005b81518110156112a7576040518060600160405280876001600160a01b03168152602001846001600160a01b0316815260200183838151811061125557611255612c6e565b60200260200101516001600160a01b03168152508a898151811061127b5761127b612c6e565b6020026020010181905250878061129190612c84565b985050808061129f90612c84565b915050611211565b50505080806112b590612c84565b9150506111b3565b50505080806112cb90612c84565b91505061116a565b50505090565b600954604051631960d2b360e21b81526001600160a01b03838116600483015260009216906365834acc9060240160206040518083038186803b15801561131f57600080fd5b505afa158015611333573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105df9190612b8d565b610e4d600182611fc1565b7f038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd961138d8133611dbd565b60005b8251811015610dce5760006113e1600360008685815181106113b4576113b4612c6e565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020611fb7565b1115611400576040516361c45a0f60e01b815260040160405180910390fd5b61142d83828151811061141557611415612c6e565b60200260200101516001611fc190919063ffffffff16565b508061143881612c84565b915050611390565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600080516020612e938339815191526114828133611dbd565b610dce338484611fd6565b60006105df600183611e21565b600954604051631960d2b360e21b81523360048201526001600160a01b03909116906365834acc9060240160206040518083038186803b1580156114dd57600080fd5b505afa1580156114f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115159190612b8d565b61155b5760405162461bcd60e51b81526020600482015260176024820152764d616368696e6572793a206e6f74206d656368616e696360481b60448201526064016106a3565b60008467ffffffffffffffff81111561157657611576612930565b60405190808252806020026020018201604052801561159f578160200160208202803683370190505b5090506115ad600185611e21565b6115ca576040516364a7bd4d60e11b815260040160405180910390fd5b60005b858110156119165761167a8787838181106115ea576115ea612c6e565b905060a0020160400160208101906116029190612a0b565b600860008a8a8681811061161857611618612c6e565b61162e92602060a0909202019081019150612a0b565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a8a8681811061166257611662612c6e565b905060a0020160200160208101906107059190612a0b565b6116975760405163d69b537960e01b815260040160405180910390fd5b60008787838181106116ab576116ab612c6e565b905060a002016060013560001415611799578787838181106116cf576116cf612c6e565b905060a0020160200160208101906116e79190612a0b565b6001600160a01b03166370a0823189898581811061170757611707612c6e565b61171d92602060a0909202019081019150612a0b565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561175c57600080fd5b505afa158015611770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117949190612baf565b6117b6565b8787838181106117ab576117ab612c6e565b905060a00201606001355b905061180f8888848181106117cd576117cd612c6e565b6117e392602060a0909202019081019150612a0b565b87838b8b878181106117f7576117f7612c6e565b905060a0020160200160208101906108459190612a0b565b87878381811061182157611821612c6e565b905060a0020160400160208101906118399190612a0b565b6001600160a01b03166370a0823189898581811061185957611859612c6e565b61186f92602060a0909202019081019150612a0b565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156118ae57600080fd5b505afa1580156118c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e69190612baf565b8383815181106118f8576118f8612c6e565b6020908102919091010152508061190e81612c84565b9150506115cd565b506040516364c3d39f60e01b81526001600160a01b038516906364c3d39f906119459086908690600401612cb7565b600060405180830381600087803b15801561195f57600080fd5b505af1158015611973573d6000803e3d6000fd5b5050505060005b85811015611b025781818151811061199457611994612c6e565b60200260200101518787838181106119ae576119ae612c6e565b905060a0020160400160208101906119c69190612a0b565b6001600160a01b03166370a082318989858181106119e6576119e6612c6e565b6119fc92602060a0909202019081019150612a0b565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b158015611a3b57600080fd5b505afa158015611a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a739190612baf565b611a7d9190612c57565b828281518110611a8f57611a8f612c6e565b602002602001018181525050868682818110611aad57611aad612c6e565b905060a0020160800135828281518110611ac957611ac9612c6e565b60200260200101511015611af0576040516309d2d38b60e31b815260040160405180910390fd5b80611afa81612c84565b91505061197a565b507f4a8b10eb58b24f8872a8364002b92c533c3a143d3588739819be8eb6b38679658185604051611b34929190612ccb565b60405180910390a1505050505050565b6001600160a01b0382166000908152600360205260409020610dce9082611fc1565b6060611b726001611f9e565b905090565b600082815260208190526040902060010154611b938133611dbd565b610dce8383611f24565b7f0b43cb2c88b4e8fc5d4ac1352ba889b22584df0c58c4b5b589731a1c9f6f29d3611bc88133611dbd565b600980546001600160a01b0319166001600160a01b0384161790555050565b610e4d600182611f89565b7fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b911611c1d8133611dbd565b6001600160a01b0383161580611c3a57506001600160a01b038216155b15611c585760405163d92e233d60e01b815260040160405180910390fd5b6001826001600160a01b031663cd985af06040518163ffffffff1660e01b815260040160206040518083038186803b158015611c9357600080fd5b505afa158015611ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ccb9190612d35565b6001811115611cdc57611cdc612d1f565b14611cfa57604051634b3d6f3360e11b815260040160405180910390fd5b611d05600183611e21565b611d22576040516364a7bd4d60e11b815260040160405180910390fd5b6001600160a01b038381166000908152600460205260409020541615611d75576001600160a01b0380841660009081526004602090815260408083205490931682526003905220611d739084611fc1565b505b6001600160a01b03838116600090815260046020908152604080832080546001600160a01b03191694871694851790559282526003905220611db79084611f89565b50505050565b611dc78282611440565b610e4d57611ddf816001600160a01b0316601461217d565b611dea83602061217d565b604051602001611dfb929190612d82565b60408051601f198184030181529082905262461bcd60e51b82526106a391600401612df7565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611db7908590612319565b611eaa8282611440565b610e4d576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055611ee03390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611f2e8282611440565b15610e4d576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611e3f836001600160a01b0384166123eb565b60606000611e3f8361243a565b6000611e3f8383612496565b60006105df825490565b6000611e3f836001600160a01b0384166124c0565b6001600160a01b0382161580611ff357506001600160a01b038116155b156120115760405163d92e233d60e01b815260040160405180910390fd5b604051636eb1769f60e11b81523360048201523060248201526001600160a01b0383169063dd62ed3e9060440160206040518083038186803b15801561205657600080fd5b505afa15801561206a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061208e9190612baf565b156120ac57604051633c553c4360e11b815260040160405180910390fd5b6001600160a01b0380841660009081526008602090815260408083209386168352929052206120db9082611fc1565b6120f85760405163d69b537960e01b815260040160405180910390fd5b6001600160a01b03808416600090815260086020908152604080832093861683529290522061212690611fb7565b610dce576001600160a01b038316600090815260076020526040902061214c9083611fc1565b506001600160a01b038316600090815260076020526040902061216e90611fb7565b610dce57611db7600584611fc1565b6060600061218c836002612e2a565b612197906002612c9f565b67ffffffffffffffff8111156121af576121af612930565b6040519080825280601f01601f1916602001820160405280156121d9576020820181803683370190505b509050600360fc1b816000815181106121f4576121f4612c6e565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061222357612223612c6e565b60200101906001600160f81b031916908160001a9053506000612247846002612e2a565b612252906001612c9f565b90505b60018111156122ca576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061228657612286612c6e565b1a60f81b82828151811061229c5761229c612c6e565b60200101906001600160f81b031916908160001a90535060049490941c936122c381612e49565b9050612255565b508315611e3f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106a3565b600061236e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166125b39092919063ffffffff16565b805190915015610dce578080602001905181019061238c9190612b8d565b610dce5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106a3565b6000818152600183016020526040812054612432575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105df565b5060006105df565b60608160000180548060200260200160405190810160405280929190818152602001828054801561248a57602002820191906000526020600020905b815481526020019060010190808311612476575b50505050509050919050565b60008260000182815481106124ad576124ad612c6e565b9060005260206000200154905092915050565b600081815260018301602052604081205480156125a95760006124e4600183612c57565b85549091506000906124f890600190612c57565b905081811461255d57600086600001828154811061251857612518612c6e565b906000526020600020015490508087600001848154811061253b5761253b612c6e565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061256e5761256e612e60565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105df565b60009150506105df565b60606125c284846000856125ca565b949350505050565b60608247101561262b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106a3565b843b6126795760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106a3565b600080866001600160a01b031685876040516126959190612e76565b60006040518083038185875af1925050503d80600081146126d2576040519150601f19603f3d011682016040523d82523d6000602084013e6126d7565b606091505b50915091506126e78282866126f2565b979650505050505050565b60608315612701575081611e3f565b8251156127115782518084602001fd5b8160405162461bcd60e51b81526004016106a39190612df7565b80356001600160a01b038116811461274257600080fd5b919050565b60008060006060848603121561275c57600080fd5b6127658461272b565b92506127736020850161272b565b91506127816040850161272b565b90509250925092565b60006020828403121561279c57600080fd5b81356001600160e01b031981168114611e3f57600080fd5b60008083601f8401126127c657600080fd5b50813567ffffffffffffffff8111156127de57600080fd5b6020830191508360208285010111156127f657600080fd5b9250929050565b60008060008084860360e081121561281457600080fd5b60a081121561282257600080fd5b5084935061283260a0860161272b565b925060c085013567ffffffffffffffff81111561284e57600080fd5b61285a878288016127b4565b95989497509550505050565b600080600083850360a081121561287c57600080fd5b608081121561288a57600080fd5b50839250608084013567ffffffffffffffff8111156128a857600080fd5b6128b4868287016127b4565b9497909650939450505050565b6000602082840312156128d357600080fd5b5035919050565b600080604083850312156128ed57600080fd5b823591506128fd6020840161272b565b90509250929050565b6000806040838503121561291957600080fd5b6129228361272b565b91506128fd6020840161272b565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561295957600080fd5b823567ffffffffffffffff8082111561297157600080fd5b818501915085601f83011261298557600080fd5b81358181111561299757612997612930565b8060051b604051601f19603f830116810181811085821117156129bc576129bc612930565b6040529182528482019250838101850191888311156129da57600080fd5b938501935b828510156129ff576129f08561272b565b845293850193928501926129df565b98975050505050505050565b600060208284031215612a1d57600080fd5b611e3f8261272b565b6020808252825182820181905260009190848201906040850190845b81811015612a675783516001600160a01b031683529284019291840191600101612a42565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612ace57815180516001600160a01b0390811686528782015181168887015290860151168585015260609093019290850190600101612a90565b5091979650505050505050565b600080600080600060608688031215612af357600080fd5b853567ffffffffffffffff80821115612b0b57600080fd5b818801915088601f830112612b1f57600080fd5b813581811115612b2e57600080fd5b89602060a083028501011115612b4357600080fd5b60208301975080965050612b596020890161272b565b94506040880135915080821115612b6f57600080fd5b50612b7c888289016127b4565b969995985093965092949392505050565b600060208284031215612b9f57600080fd5b81518015158114611e3f57600080fd5b600060208284031215612bc157600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038881168252878116602083015286166040820152606081018590526080810184905260c060a08201819052600090612c349083018486612bc8565b9998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015612c6957612c69612c41565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612c9857612c98612c41565b5060010190565b60008219821115612cb257612cb2612c41565b500190565b6020815260006125c2602083018486612bc8565b604080825283519082018190526000906020906060840190828701845b82811015612d0457815184529284019290840190600101612ce8565b5050506001600160a01b039490941692019190915250919050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215612d4757600080fd5b815160028110611e3f57600080fd5b60005b83811015612d71578181015183820152602001612d59565b83811115611db75750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612dba816017850160208801612d56565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612deb816028840160208801612d56565b01602801949350505050565b6020815260008251806020840152612e16816040850160208701612d56565b601f01601f19169190910160400192915050565b6000816000190483118215151615612e4457612e44612c41565b500290565b600081612e5857612e58612c41565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251612e88818460208701612d56565b919091019291505056fe49e347583a7b9e7f325e8963ee1f94127eba81e401796874b5a22f7c8f9d45f7a26469706673582212203c302ec40e57e85545fa86a899b6b5952cabae88b215b004336ba12b48a341f164736f6c63430008090033038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd91893e1a169e79f2fe8aa327b1bceb2fede7a1b76a54824f95ea0e737720954ae0b43cb2c88b4e8fc5d4ac1352ba889b22584df0c58c4b5b589731a1c9f6f29d3';

type TradeFactoryExecutorForTestConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: TradeFactoryExecutorForTestConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TradeFactoryExecutorForTest__factory extends ContractFactory {
  constructor(...args: TradeFactoryExecutorForTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'TradeFactoryExecutorForTest';
  }

  deploy(
    _masterAdmin: string,
    _swapperAdder: string,
    _swapperSetter: string,
    _strategyModifier: string,
    _mechanicsRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TradeFactoryExecutorForTest> {
    return super.deploy(
      _masterAdmin,
      _swapperAdder,
      _swapperSetter,
      _strategyModifier,
      _mechanicsRegistry,
      overrides || {}
    ) as Promise<TradeFactoryExecutorForTest>;
  }
  getDeployTransaction(
    _masterAdmin: string,
    _swapperAdder: string,
    _swapperSetter: string,
    _strategyModifier: string,
    _mechanicsRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_masterAdmin, _swapperAdder, _swapperSetter, _strategyModifier, _mechanicsRegistry, overrides || {});
  }
  attach(address: string): TradeFactoryExecutorForTest {
    return super.attach(address) as TradeFactoryExecutorForTest;
  }
  connect(signer: Signer): TradeFactoryExecutorForTest__factory {
    return super.connect(signer) as TradeFactoryExecutorForTest__factory;
  }
  static readonly contractName: 'TradeFactoryExecutorForTest';
  public readonly contractName: 'TradeFactoryExecutorForTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TradeFactoryExecutorForTestInterface {
    return new utils.Interface(_abi) as TradeFactoryExecutorForTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TradeFactoryExecutorForTest {
    return new Contract(address, _abi, signerOrProvider) as TradeFactoryExecutorForTest;
  }
}
