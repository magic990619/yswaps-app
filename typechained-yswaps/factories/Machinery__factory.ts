/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Machinery, MachineryInterface } from '../Machinery';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '__mechanicsRegistry',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_mechanic',
        type: 'address',
      },
    ],
    name: 'isMechanic',
    outputs: [
      {
        internalType: 'bool',
        name: '_isMechanic',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mechanicsRegistry',
    outputs: [
      {
        internalType: 'address',
        name: '_mechanicRegistry',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '__mechanicsRegistry',
        type: 'address',
      },
    ],
    name: 'setMechanicsRegistry',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161025238038061025283398101604081905261002f91610050565b600080546001600160a01b0319166001600160a01b03831617905550610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b6101c38061008f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631078f3881461004657806365834acc14610066578063ef47da6d14610089575b600080fd5b6000546040516001600160a01b0390911681526020015b60405180910390f35b61007961007436600461013b565b6100b7565b604051901515815260200161005d565b6100b561009736600461013b565b600080546001600160a01b0319166001600160a01b03831617905550565b005b60008054604051631960d2b360e21b81526001600160a01b038481166004830152909116906365834acc9060240160206040518083038186803b1580156100fd57600080fd5b505afa158015610111573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610135919061016b565b92915050565b60006020828403121561014d57600080fd5b81356001600160a01b038116811461016457600080fd5b9392505050565b60006020828403121561017d57600080fd5b8151801515811461016457600080fdfea2646970667358221220edf0bc90eaa87d5f18c03422cd64a80ec24348a2bd5c0a976f7bf7ad73b034ca64736f6c63430008090033';

type MachineryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MachineryConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Machinery__factory extends ContractFactory {
  constructor(...args: MachineryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Machinery';
  }

  deploy(__mechanicsRegistry: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<Machinery> {
    return super.deploy(__mechanicsRegistry, overrides || {}) as Promise<Machinery>;
  }
  getDeployTransaction(__mechanicsRegistry: string, overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(__mechanicsRegistry, overrides || {});
  }
  attach(address: string): Machinery {
    return super.attach(address) as Machinery;
  }
  connect(signer: Signer): Machinery__factory {
    return super.connect(signer) as Machinery__factory;
  }
  static readonly contractName: 'Machinery';
  public readonly contractName: 'Machinery';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MachineryInterface {
    return new utils.Interface(_abi) as MachineryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Machinery {
    return new Contract(address, _abi, signerOrProvider) as Machinery;
  }
}
