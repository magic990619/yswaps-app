/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { UniswapV2Swapper, UniswapV2SwapperInterface } from '../UniswapV2Swapper';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_governor',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tradeFactory',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_uniswapFactory',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_uniswapRouter',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'IncorrectSwapInformation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotAuthorized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'DustSent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'GovernorAccepted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'pendingGovernor',
        type: 'address',
      },
    ],
    name: 'PendingGovernorSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_tradeFactory',
        type: 'address',
      },
    ],
    name: 'TradeFactorySet',
    type: 'event',
  },
  {
    inputs: [],
    name: 'ETH_ADDRESS',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'FACTORY',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ROUTER',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SWAPPER_TYPE',
    outputs: [
      {
        internalType: 'enum ISwapper.SwapperType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'acceptGovernor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isGovernor',
    outputs: [
      {
        internalType: 'bool',
        name: '_isGovernor',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingGovernor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'sendDust',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_pendingGovernor',
        type: 'address',
      },
    ],
    name: 'setPendingGovernor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tradeFactory',
        type: 'address',
      },
    ],
    name: 'setTradeFactory',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenOut',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amountIn',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minAmountOut',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'swap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tradeFactory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60c06040523480156200001157600080fd5b506040516200132638038062001326833981016040819052620000349162000134565b838380826001600160a01b038116620000aa5760405162461bcd60e51b815260206004820152602e60248201527f676f7665726e61626c652f676f7665726e6f722d73686f756c642d6e6f742d6260448201526d652d7a65726f2d6164647265737360901b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b039283161790558116620000e65760405163d92e233d60e01b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0392831617905593841660805250501660a05250620001919050565b80516001600160a01b03811681146200012f57600080fd5b919050565b600080600080608085870312156200014b57600080fd5b620001568562000117565b9350620001666020860162000117565b9250620001766040860162000117565b9150620001866060860162000117565b905092959194509250565b60805160a05161115a620001cc600039600081816101450152818161070a015281816107cc01526108700152600061011e015261115a6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063a734f06e1161008c578063e43581b811610066578063e43581b8146101d0578063e58bb63914610202578063e5e19b4a1461020a578063f235757f1461021d57600080fd5b8063a734f06e1461018d578063cd985af0146101a8578063e3056a34146101bd57600080fd5b80630c340a24146100d45780632db8c129146101045780632dd310001461011957806332fe7b26146101405780636521094214610167578063a5d4096b1461017a575b600080fd5b6000546100e7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610117610112366004610ce6565b610230565b005b6100e77f000000000000000000000000000000000000000000000000000000000000000081565b6100e77f000000000000000000000000000000000000000000000000000000000000000081565b610117610175366004610d22565b610273565b610117610188366004610d3d565b610319565b6100e773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6101b0600081565b6040516100fb9190610df5565b6001546100e7906001600160a01b031681565b6101f26101de366004610d22565b6000546001600160a01b0391821691161490565b60405190151581526020016100fb565b610117610368565b6004546100e7906001600160a01b031681565b61011761022b366004610d22565b6103cc565b6000546001600160a01b031633146102635760405162461bcd60e51b815260040161025a90610e1d565b60405180910390fd5b61026e838383610402565b505050565b6000546001600160a01b0316331461029d5760405162461bcd60e51b815260040161025a90610e1d565b6001600160a01b0381166102c45760405163d92e233d60e01b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fbda986fea33634f76bd215bacd0d368610edf55143c3ca42bd0f55040ad870b5906020015b60405180910390a150565b6004546001600160a01b031633146103445760405163ea8e4eb560e01b815260040160405180910390fd5b61035187878787876105a4565b61035f878787878686610634565b50505050505050565b6001546001600160a01b031633146103c25760405162461bcd60e51b815260206004820181905260248201527f676f7665726e61626c652f6f6e6c792d70656e64696e672d676f7665726e6f72604482015260640161025a565b6103ca61090e565b565b6000546001600160a01b031633146103f65760405162461bcd60e51b815260040161025a90610e1d565b6103ff8161095e565b50565b6001600160a01b0383166104705760405162461bcd60e51b815260206004820152602f60248201527f636f6c6c65637461626c652d647573742f63616e742d73656e642d647573742d60448201526e746f2d7a65726f2d6164647265737360881b606482015260840161025a565b61047b600283610a20565b156104df5760405162461bcd60e51b815260206004820152602e60248201527f636f6c6c65637461626c652d647573742f746f6b656e2d69732d706172742d6f60448201526d198b5d1a194b5c1c9bdd1bd8dbdb60921b606482015260840161025a565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610540576040516001600160a01b0384169082156108fc029083906000818181858888f1935050505015801561053a573d6000803e3d6000fd5b50610554565b6105546001600160a01b0383168483610a45565b604080516001600160a01b038086168252841660208201529081018290527f1e34c1aee8e83c2dcc14c21bb4bfeea7f46c0c998cb797ac7cc4d7a18f5c656b9060600160405180910390a1505050565b6001600160a01b03851615806105c157506001600160a01b038416155b806105d357506001600160a01b038316155b156105f15760405163d92e233d60e01b815260040160405180910390fd5b8161060f57604051631f2a200560e01b815260040160405180910390fd5b8061062d57604051631f2a200560e01b815260040160405180910390fd5b5050505050565b600061064282840184610ebf565b90508060008151811061065757610657610f51565b60200260200101516001600160a01b0316866001600160a01b03161415806106b7575080600182516106899190610f67565b8151811061069957610699610f51565b60200260200101516001600160a01b0316856001600160a01b031614155b156106d55760405163e625f81360e01b815260040160405180910390fd5b806000815181106106e8576106e8610f51565b602090810291909101015160405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600060248301529091169063095ea7b390604401602060405180830381600087803b15801561075e57600080fd5b505af1158015610772573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107969190610f8c565b50806000815181106107aa576107aa610f51565b602090810291909101015160405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018790529091169063095ea7b390604401602060405180830381600087803b15801561082057600080fd5b505af1158015610834573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108589190610f8c565b506040516338ed173960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338ed1739906108ae90879060009086908d904290600401610fae565b600060405180830381600087803b1580156108c857600080fd5b505af11580156108dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610904919081019061101f565b5050505050505050565b60018054600080546001600160a01b03199081166001600160a01b0384161782559091169091556040517f7880f0fcc848e1f26e461654b100a69f8d0641e29aa29f6596c6afadbb36b5ea9190a1565b6001600160a01b0381166109d25760405162461bcd60e51b815260206004820152603560248201527f676f7665726e61626c652f70656e64696e672d676f7665726e6f722d73686f756044820152746c642d6e6f742d62652d7a65726f2d61646472657360581b606482015260840161025a565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f56bddfa0cee9697cebddf9acd7f23dc6583663b05e007b877056d05017994def9060200161030e565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261026e92869291600091610ad5918516908490610b52565b80519091501561026e5780806020019051810190610af39190610f8c565b61026e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161025a565b6060610b618484600085610b69565b949350505050565b606082471015610bca5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161025a565b843b610c185760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161025a565b600080866001600160a01b03168587604051610c3491906110d5565b60006040518083038185875af1925050503d8060008114610c71576040519150601f19603f3d011682016040523d82523d6000602084013e610c76565b606091505b5091509150610c86828286610c91565b979650505050505050565b60608315610ca0575081610a3e565b825115610cb05782518084602001fd5b8160405162461bcd60e51b815260040161025a91906110f1565b80356001600160a01b0381168114610ce157600080fd5b919050565b600080600060608486031215610cfb57600080fd5b610d0484610cca565b9250610d1260208501610cca565b9150604084013590509250925092565b600060208284031215610d3457600080fd5b610a3e82610cca565b600080600080600080600060c0888a031215610d5857600080fd5b610d6188610cca565b9650610d6f60208901610cca565b9550610d7d60408901610cca565b9450606088013593506080880135925060a088013567ffffffffffffffff80821115610da857600080fd5b818a0191508a601f830112610dbc57600080fd5b813581811115610dcb57600080fd5b8b6020828501011115610ddd57600080fd5b60208301945080935050505092959891949750929550565b6020810160028310610e1757634e487b7160e01b600052602160045260246000fd5b91905290565b60208082526018908201527f676f7665726e61626c652f6f6e6c792d676f7665726e6f720000000000000000604082015260600190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e9357610e93610e54565b604052919050565b600067ffffffffffffffff821115610eb557610eb5610e54565b5060051b60200190565b60006020808385031215610ed257600080fd5b823567ffffffffffffffff811115610ee957600080fd5b8301601f81018513610efa57600080fd5b8035610f0d610f0882610e9b565b610e6a565b81815260059190911b82018301908381019087831115610f2c57600080fd5b928401925b82841015610c8657610f4284610cca565b82529284019290840190610f31565b634e487b7160e01b600052603260045260246000fd5b600082821015610f8757634e487b7160e01b600052601160045260246000fd5b500390565b600060208284031215610f9e57600080fd5b81518015158114610a3e57600080fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610ffe5784516001600160a01b031683529383019391830191600101610fd9565b50506001600160a01b03969096166060850152505050608001529392505050565b6000602080838503121561103257600080fd5b825167ffffffffffffffff81111561104957600080fd5b8301601f8101851361105a57600080fd5b8051611068610f0882610e9b565b81815260059190911b8201830190838101908783111561108757600080fd5b928401925b82841015610c865783518252928401929084019061108c565b60005b838110156110c05781810151838201526020016110a8565b838111156110cf576000848401525b50505050565b600082516110e78184602087016110a5565b9190910192915050565b60208152600082518060208401526111108160408501602087016110a5565b601f01601f1916919091016040019291505056fea264697066735822122018ea6a5c08d6e470c02f97fb47d5fb1da0e0ea38f437cb63d2db25275acf389464736f6c63430008090033';

type UniswapV2SwapperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: UniswapV2SwapperConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2Swapper__factory extends ContractFactory {
  constructor(...args: UniswapV2SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'UniswapV2Swapper';
  }

  deploy(
    _governor: string,
    _tradeFactory: string,
    _uniswapFactory: string,
    _uniswapRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV2Swapper> {
    return super.deploy(_governor, _tradeFactory, _uniswapFactory, _uniswapRouter, overrides || {}) as Promise<UniswapV2Swapper>;
  }
  getDeployTransaction(
    _governor: string,
    _tradeFactory: string,
    _uniswapFactory: string,
    _uniswapRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_governor, _tradeFactory, _uniswapFactory, _uniswapRouter, overrides || {});
  }
  attach(address: string): UniswapV2Swapper {
    return super.attach(address) as UniswapV2Swapper;
  }
  connect(signer: Signer): UniswapV2Swapper__factory {
    return super.connect(signer) as UniswapV2Swapper__factory;
  }
  static readonly contractName: 'UniswapV2Swapper';
  public readonly contractName: 'UniswapV2Swapper';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2SwapperInterface {
    return new utils.Interface(_abi) as UniswapV2SwapperInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): UniswapV2Swapper {
    return new Contract(address, _abi, signerOrProvider) as UniswapV2Swapper;
  }
}
