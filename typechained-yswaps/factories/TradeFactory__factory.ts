/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { TradeFactory, TradeFactoryInterface } from '../TradeFactory';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_masterAdmin',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_swapperAdder',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_swapperSetter',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_strategyModifier',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_mechanicsRegistry',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AllowanceShouldBeZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidAmountOut',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidSwapper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTrade',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotAsyncSwapper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSyncSwapper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SwapperInUse',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroSlippage',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_receivedAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'AsyncTradeExecuted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'DustSent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256[]',
        name: '_receivedAmount',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'MultipleAsyncTradeExecuted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_receivedAmount',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'SyncTradeExecuted',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ETH_ADDRESS',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MASTER_ADMIN',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STRATEGY',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STRATEGY_MANAGER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SWAPPER_ADDER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SWAPPER_SETTER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '__swappers',
        type: 'address[]',
      },
    ],
    name: 'addSwappers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenOut',
        type: 'address',
      },
    ],
    name: 'disable',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenOut',
        type: 'address',
      },
    ],
    name: 'disableByAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenOut',
        type: 'address',
      },
    ],
    name: 'enable',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enabledTrades',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: '_strategy',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenOut',
            type: 'address',
          },
        ],
        internalType: 'struct ITradeFactoryPositionsHandler.EnabledTrade[]',
        name: '_enabledTrades',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: '_strategy',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenOut',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: '_amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: '_minAmountOut',
            type: 'uint256',
          },
        ],
        internalType: 'struct ITradeFactoryExecutor.AsyncTradeExecutionDetails',
        name: '_tradeExecutionDetails',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [
      {
        internalType: 'uint256',
        name: '_receivedAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: '_tokenIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenOut',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: '_amountIn',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: '_maxSlippage',
            type: 'uint256',
          },
        ],
        internalType: 'struct ITradeFactoryExecutor.SyncTradeExecutionDetails',
        name: '_tradeExecutionDetails',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [
      {
        internalType: 'uint256',
        name: '_receivedAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: '_strategy',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenOut',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: '_amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: '_minAmountOut',
            type: 'uint256',
          },
        ],
        internalType: 'struct ITradeFactoryExecutor.AsyncTradeExecutionDetails[]',
        name: '_tradesExecutionDetails',
        type: 'tuple[]',
      },
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_mechanic',
        type: 'address',
      },
    ],
    name: 'isMechanic',
    outputs: [
      {
        internalType: 'bool',
        name: '_isMechanic',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'isSwapper',
    outputs: [
      {
        internalType: 'bool',
        name: '_isSwapper',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mechanicsRegistry',
    outputs: [
      {
        internalType: 'address',
        name: '_mechanicRegistry',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '__swappers',
        type: 'address[]',
      },
    ],
    name: 'removeSwappers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'sendDust',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '__mechanicsRegistry',
        type: 'address',
      },
    ],
    name: 'setMechanicsRegistry',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'setStrategySyncSwapper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'strategySyncSwapper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'swapperStrategies',
    outputs: [
      {
        internalType: 'address[]',
        name: '_strategies',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'swappers',
    outputs: [
      {
        internalType: 'address[]',
        name: '_swappersList',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620034fc380380620034fc83398101604081905262000034916200036d565b8080838686896001600160a01b038116620000625760405163d92e233d60e01b815260040160405180910390fd5b6200007d600080516020620034dc8339815191528062000255565b62000098600080516020620034dc83398151915282620002a0565b506001600160a01b0382161580620000b757506001600160a01b038116155b15620000d65760405163d92e233d60e01b815260040160405180910390fd5b620001006000805160206200349c833981519152600080516020620034dc83398151915262000255565b6200013b7fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b911600080516020620034dc83398151915262000255565b620001566000805160206200349c83398151915283620002a0565b620001827fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b91182620002a0565b50506001600160a01b038116620001ac5760405163d92e233d60e01b815260040160405180910390fd5b620001e77f49e347583a7b9e7f325e8963ee1f94127eba81e401796874b5a22f7c8f9d45f7600080516020620034bc83398151915262000255565b62000211600080516020620034bc833981519152600080516020620034dc83398151915262000255565b6200022c600080516020620034bc83398151915282620002a0565b50600980546001600160a01b0319166001600160a01b03831617905550505050505050620003dd565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b620002ac8282620002b0565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620002ac576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200030c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b80516001600160a01b03811681146200036857600080fd5b919050565b600080600080600060a086880312156200038657600080fd5b620003918662000350565b9450620003a16020870162000350565b9350620003b16040870162000350565b9250620003c16060870162000350565b9150620003d16080870162000350565b90509295509295909350565b6130af80620003ed6000396000f3fe608060405234801561001057600080fd5b50600436106101e45760003560e01c806365834acc1161010f578063b64230ba116100a2578063d547741f11610071578063d547741f14610486578063e454a5ed14610499578063ef47da6d146104c0578063f7bd381f146104d357600080fd5b8063b64230ba1461042f578063bbeee59114610442578063cbf8e6c414610455578063ccf61a411461045d57600080fd5b80639cd38be5116100de5780639cd38be5146103d25780639fc2c476146103e5578063a217fddf1461040c578063a734f06e1461041457600080fd5b806365834acc14610372578063687020d814610385578063907ab008146103ac57806391d14854146103bf57600080fd5b80632db8c129116101875780634c854126116101565780634c854126146103035780634d1dd98f14610316578063504254911461033d5780635163b4771461035d57600080fd5b80632db8c129146102b75780632f2ff15d146102ca57806336568abe146102dd5780634a2c1bab146102f057600080fd5b806311eff09c116101c357806311eff09c1461024b578063185025ef1461026c57806319b44cd914610281578063248a9ca31461029457600080fd5b8062b8ff92146101e957806301ffc9a7146101fe5780631078f38814610226575b600080fd5b6101fc6101f73660046128d2565b6104e6565b005b61021161020c366004612915565b61057a565b60405190151581526020015b60405180910390f35b6009546001600160a01b03165b6040516001600160a01b03909116815260200161021d565b61025e610259366004612988565b6105b1565b60405190815260200161021d565b61025e60008051602061305a83398151915281565b61025e61028f3660046129f1565b610a81565b61025e6102a2366004612a4c565b60009081526020819052604090206001015490565b6101fc6102c5366004612a65565b610d74565b6101fc6102d8366004612aa1565b610db0565b6101fc6102eb366004612aa1565b610ddb565b6101fc6102fe366004612ae3565b610e59565b6101fc610311366004612ba8565b610f1d565b61025e7fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b91181565b61035061034b366004612bd2565b610fe1565b60405161021d9190612bed565b610365611005565b60405161021d9190612c3a565b610211610380366004612bd2565b6112bf565b61025e7f038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd981565b6101fc6103ba366004612ae3565b61133d565b6102116103cd366004612aa1565b61141b565b6101fc6103e0366004612ba8565b611444565b61025e7f1893e1a169e79f2fe8aa327b1bceb2fede7a1b76a54824f95ea0e737720954ae81565b61025e600081565b61023373eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b61021161043d366004612bd2565b611468565b6101fc610450366004612ca2565b611475565b610350611b1f565b61023361046b366004612bd2565b6004602052600090815260409020546001600160a01b031681565b6101fc610494366004612aa1565b611b30565b61025e7f0b43cb2c88b4e8fc5d4ac1352ba889b22584df0c58c4b5b589731a1c9f6f29d381565b6101fc6104ce366004612bd2565b611b56565b6101fc6104e1366004612ba8565b611ba0565b7f1893e1a169e79f2fe8aa327b1bceb2fede7a1b76a54824f95ea0e737720954ae6105118133611d65565b60405163abb347a960e01b81526001600160a01b038481166004830152838116602483015285169063abb347a990604401600060405180830381600087803b15801561055c57600080fd5b505af1158015610570573d6000803e3d6000fd5b5050505050505050565b60006001600160e01b03198216637965db0b60e01b14806105ab57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600954604051631960d2b360e21b81523360048201526000916001600160a01b0316906365834acc9060240160206040518083038186803b1580156105f557600080fd5b505afa158015610609573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062d9190612d54565b6106785760405162461bcd60e51b81526020600482015260176024820152764d616368696e6572793a206e6f74206d656368616e696360481b60448201526064015b60405180910390fd5b6106f061068b6060870160408801612bd2565b6008600061069c60208a018a612bd2565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008860200160208101906106d19190612bd2565b6001600160a01b03168152602081019190915260400160002090611dc9565b61070d5760405163d69b537960e01b815260040160405180910390fd5b610718600185611dc9565b610735576040516364a7bd4d60e11b815260040160405180910390fd5b600060608601356107e7576107506040870160208801612bd2565b6001600160a01b03166370a0823161076b6020890189612bd2565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156107aa57600080fd5b505afa1580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e29190612d76565b6107ed565b85606001355b90506108226107ff6020880188612bd2565b868361081160408b0160208c01612bd2565b6001600160a01b0316929190611dee565b60006108346060880160408901612bd2565b6001600160a01b03166370a0823161084f60208a018a612bd2565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561088e57600080fd5b505afa1580156108a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c69190612d76565b90506001600160a01b03861663a5d4096b6108e460208a018a612bd2565b6108f460408b0160208c01612bd2565b61090460608c0160408d01612bd2565b868c608001358b8b6040518863ffffffff1660e01b815260040161092e9796959493929190612db8565b600060405180830381600087803b15801561094857600080fd5b505af115801561095c573d6000803e3d6000fd5b508392506109739150506060890160408a01612bd2565b6001600160a01b03166370a0823161098e60208b018b612bd2565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b1580156109cd57600080fd5b505afa1580156109e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a059190612d76565b610a0f9190612e1e565b92508660800135831015610a36576040516309d2d38b60e31b815260040160405180910390fd5b604080518481526001600160a01b03881660208201527feb6edbd932a6290d7ca794a21b27f2da7d46b0f9aa0cde6135ce1d0469ad144e910160405180910390a15050949350505050565b600060008051602061305a833981519152610a9c8133611d65565b3360009081526004602090815260408220546001600160a01b03169190610ac590880188612bd2565b6001600160a01b03161480610af257506000610ae76040880160208901612bd2565b6001600160a01b0316145b15610b105760405163d92e233d60e01b815260040160405180910390fd5b6040860135610b3257604051631f2a200560e01b815260040160405180910390fd5b6060860135610b5457604051635380c59d60e01b815260040160405180910390fd5b610b6b3382604089013561081160208b018b612bd2565b6000610b7d6040880160208901612bd2565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015610bbe57600080fd5b505afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190612d76565b90506001600160a01b03821663a5d4096b33610c1560208b018b612bd2565b610c2560408c0160208d01612bd2565b8b604001358c606001358c8c6040518863ffffffff1660e01b8152600401610c539796959493929190612db8565b600060405180830381600087803b158015610c6d57600080fd5b505af1158015610c81573d6000803e3d6000fd5b50839250610c989150506040890160208a01612bd2565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015610cd957600080fd5b505afa158015610ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d119190612d76565b610d1b9190612e1e565b9350816001600160a01b0316336001600160a01b03167f77afa6671ccb5a39d59afc769ee32cdfdc0e4d7b9bbc32a0092a27843a74e64486604051610d6291815260200190565b60405180910390a35050509392505050565b7f0b43cb2c88b4e8fc5d4ac1352ba889b22584df0c58c4b5b589731a1c9f6f29d3610d9f8133611d65565b610daa848484611e59565b50505050565b600082815260208190526040902060010154610dcc8133611d65565b610dd68383611ffb565b505050565b6001600160a01b0381163314610e4b5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161066f565b610e55828261207f565b5050565b7f038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd9610e848133611d65565b60005b8251811015610dd65760006001600160a01b0316838281518110610ead57610ead612e35565b60200260200101516001600160a01b03161415610edd5760405163d92e233d60e01b815260040160405180910390fd5b610f0a838281518110610ef257610ef2612e35565b602002602001015160016120e490919063ffffffff16565b5080610f1581612e4b565b915050610e87565b60008051602061305a833981519152610f368133611d65565b6001600160a01b0383161580610f5357506001600160a01b038216155b15610f715760405163d92e233d60e01b815260040160405180910390fd5b610f7c6005336120e4565b50336000908152600760205260409020610f9690846120e4565b503360009081526008602090815260408083206001600160a01b03871684529091529020610fc490836120e4565b610dd65760405163d69b537960e01b815260040160405180910390fd5b6001600160a01b03811660009081526003602052604090206060906105ab906120f9565b60606000805b61101560056120f9565b518110156110e457600061102a600583612106565b6001600160a01b03811660009081526007602052604081209192509061104f906120f9565b905060005b81518110156110ce57600082828151811061107157611071612e35565b6020908102919091018101516001600160a01b0380871660009081526008845260408082209284168252919093529091209091506110ae90612112565b6110b89087612e66565b95505080806110c690612e4b565b915050611054565b50505080806110dc90612e4b565b91505061100b565b508067ffffffffffffffff8111156110fe576110fe612acd565b60405190808252806020026020018201604052801561114957816020015b604080516060810182526000808252602080830182905292820152825260001990920191018161111c5790505b5091506000805b61115a60056120f9565b518110156112b957600061116f600583612106565b6001600160a01b038116600090815260076020526040812091925090611194906120f9565b905060005b81518110156112a35760008282815181106111b6576111b6612e35565b6020908102919091018101516001600160a01b03808716600090815260088452604080822092841682529190935282209092506111f2906120f9565b905060005b815181101561128d576040518060600160405280876001600160a01b03168152602001846001600160a01b0316815260200183838151811061123b5761123b612e35565b60200260200101516001600160a01b03168152508a898151811061126157611261612e35565b6020026020010181905250878061127790612e4b565b985050808061128590612e4b565b9150506111f7565b505050808061129b90612e4b565b915050611199565b50505080806112b190612e4b565b915050611150565b50505090565b600954604051631960d2b360e21b81526001600160a01b03838116600483015260009216906365834acc9060240160206040518083038186803b15801561130557600080fd5b505afa158015611319573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ab9190612d54565b7f038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd96113688133611d65565b60005b8251811015610dd65760006113bc6003600086858151811061138f5761138f612e35565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020612112565b11156113db576040516361c45a0f60e01b815260040160405180910390fd5b6114088382815181106113f0576113f0612e35565b6020026020010151600161211c90919063ffffffff16565b508061141381612e4b565b91505061136b565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008051602061305a83398151915261145d8133611d65565b610dd6338484612131565b60006105ab600183611dc9565b600954604051631960d2b360e21b81523360048201526001600160a01b03909116906365834acc9060240160206040518083038186803b1580156114b857600080fd5b505afa1580156114cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f09190612d54565b6115365760405162461bcd60e51b81526020600482015260176024820152764d616368696e6572793a206e6f74206d656368616e696360481b604482015260640161066f565b60008467ffffffffffffffff81111561155157611551612acd565b60405190808252806020026020018201604052801561157a578160200160208202803683370190505b509050611588600185611dc9565b6115a5576040516364a7bd4d60e11b815260040160405180910390fd5b60005b858110156118f1576116558787838181106115c5576115c5612e35565b905060a0020160400160208101906115dd9190612bd2565b600860008a8a868181106115f3576115f3612e35565b61160992602060a0909202019081019150612bd2565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a8a8681811061163d5761163d612e35565b905060a0020160200160208101906106d19190612bd2565b6116725760405163d69b537960e01b815260040160405180910390fd5b600087878381811061168657611686612e35565b905060a002016060013560001415611774578787838181106116aa576116aa612e35565b905060a0020160200160208101906116c29190612bd2565b6001600160a01b03166370a082318989858181106116e2576116e2612e35565b6116f892602060a0909202019081019150612bd2565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561173757600080fd5b505afa15801561174b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176f9190612d76565b611791565b87878381811061178657611786612e35565b905060a00201606001355b90506117ea8888848181106117a8576117a8612e35565b6117be92602060a0909202019081019150612bd2565b87838b8b878181106117d2576117d2612e35565b905060a0020160200160208101906108119190612bd2565b8787838181106117fc576117fc612e35565b905060a0020160400160208101906118149190612bd2565b6001600160a01b03166370a0823189898581811061183457611834612e35565b61184a92602060a0909202019081019150612bd2565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561188957600080fd5b505afa15801561189d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c19190612d76565b8383815181106118d3576118d3612e35565b602090810291909101015250806118e981612e4b565b9150506115a8565b506040516364c3d39f60e01b81526001600160a01b038516906364c3d39f906119209086908690600401612e7e565b600060405180830381600087803b15801561193a57600080fd5b505af115801561194e573d6000803e3d6000fd5b5050505060005b85811015611add5781818151811061196f5761196f612e35565b602002602001015187878381811061198957611989612e35565b905060a0020160400160208101906119a19190612bd2565b6001600160a01b03166370a082318989858181106119c1576119c1612e35565b6119d792602060a0909202019081019150612bd2565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b158015611a1657600080fd5b505afa158015611a2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4e9190612d76565b611a589190612e1e565b828281518110611a6a57611a6a612e35565b602002602001018181525050868682818110611a8857611a88612e35565b905060a0020160800135828281518110611aa457611aa4612e35565b60200260200101511015611acb576040516309d2d38b60e31b815260040160405180910390fd5b80611ad581612e4b565b915050611955565b507f4a8b10eb58b24f8872a8364002b92c533c3a143d3588739819be8eb6b38679658185604051611b0f929190612e92565b60405180910390a1505050505050565b6060611b2b60016120f9565b905090565b600082815260208190526040902060010154611b4c8133611d65565b610dd6838361207f565b7f0b43cb2c88b4e8fc5d4ac1352ba889b22584df0c58c4b5b589731a1c9f6f29d3611b818133611d65565b600980546001600160a01b0319166001600160a01b0384161790555050565b7fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b911611bcb8133611d65565b6001600160a01b0383161580611be857506001600160a01b038216155b15611c065760405163d92e233d60e01b815260040160405180910390fd5b6001826001600160a01b031663cd985af06040518163ffffffff1660e01b815260040160206040518083038186803b158015611c4157600080fd5b505afa158015611c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c799190612efc565b6001811115611c8a57611c8a612ee6565b14611ca857604051634b3d6f3360e11b815260040160405180910390fd5b611cb3600183611dc9565b611cd0576040516364a7bd4d60e11b815260040160405180910390fd5b6001600160a01b038381166000908152600460205260409020541615611d23576001600160a01b0380841660009081526004602090815260408083205490931682526003905220611d21908461211c565b505b6001600160a01b03838116600090815260046020908152604080832080546001600160a01b03191694871694851790559282526003905220610daa90846120e4565b611d6f828261141b565b610e5557611d87816001600160a01b031660146122d8565b611d928360206122d8565b604051602001611da3929190612f49565b60408051601f198184030181529082905262461bcd60e51b825261066f91600401612fbe565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610daa9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612474565b6001600160a01b038316611ec75760405162461bcd60e51b815260206004820152602f60248201527f636f6c6c65637461626c652d647573742f63616e742d73656e642d647573742d60448201526e746f2d7a65726f2d6164647265737360881b606482015260840161066f565b611ed2600a83611dc9565b15611f365760405162461bcd60e51b815260206004820152602e60248201527f636f6c6c65637461626c652d647573742f746f6b656e2d69732d706172742d6f60448201526d198b5d1a194b5c1c9bdd1bd8dbdb60921b606482015260840161066f565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611f97576040516001600160a01b0384169082156108fc029083906000818181858888f19350505050158015611f91573d6000803e3d6000fd5b50611fab565b611fab6001600160a01b0383168483612546565b604080516001600160a01b038086168252841660208201529081018290527f1e34c1aee8e83c2dcc14c21bb4bfeea7f46c0c998cb797ac7cc4d7a18f5c656b9060600160405180910390a1505050565b612005828261141b565b610e55576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561203b3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b612089828261141b565b15610e55576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611de7836001600160a01b038416612576565b60606000611de7836125c5565b6000611de78383612621565b60006105ab825490565b6000611de7836001600160a01b03841661264b565b6001600160a01b038216158061214e57506001600160a01b038116155b1561216c5760405163d92e233d60e01b815260040160405180910390fd5b604051636eb1769f60e11b81523360048201523060248201526001600160a01b0383169063dd62ed3e9060440160206040518083038186803b1580156121b157600080fd5b505afa1580156121c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e99190612d76565b1561220757604051633c553c4360e11b815260040160405180910390fd5b6001600160a01b038084166000908152600860209081526040808320938616835292905220612236908261211c565b6122535760405163d69b537960e01b815260040160405180910390fd5b6001600160a01b03808416600090815260086020908152604080832093861683529290522061228190612112565b610dd6576001600160a01b03831660009081526007602052604090206122a7908361211c565b506001600160a01b03831660009081526007602052604090206122c990612112565b610dd657610daa60058461211c565b606060006122e7836002612ff1565b6122f2906002612e66565b67ffffffffffffffff81111561230a5761230a612acd565b6040519080825280601f01601f191660200182016040528015612334576020820181803683370190505b509050600360fc1b8160008151811061234f5761234f612e35565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061237e5761237e612e35565b60200101906001600160f81b031916908160001a90535060006123a2846002612ff1565b6123ad906001612e66565b90505b6001811115612425576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106123e1576123e1612e35565b1a60f81b8282815181106123f7576123f7612e35565b60200101906001600160f81b031916908160001a90535060049490941c9361241e81613010565b90506123b0565b508315611de75760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161066f565b60006124c9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661273e9092919063ffffffff16565b805190915015610dd657808060200190518101906124e79190612d54565b610dd65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161066f565b6040516001600160a01b038316602482015260448101829052610dd690849063a9059cbb60e01b90606401611e22565b60008181526001830160205260408120546125bd575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105ab565b5060006105ab565b60608160000180548060200260200160405190810160405280929190818152602001828054801561261557602002820191906000526020600020905b815481526020019060010190808311612601575b50505050509050919050565b600082600001828154811061263857612638612e35565b9060005260206000200154905092915050565b6000818152600183016020526040812054801561273457600061266f600183612e1e565b855490915060009061268390600190612e1e565b90508181146126e85760008660000182815481106126a3576126a3612e35565b90600052602060002001549050808760000184815481106126c6576126c6612e35565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806126f9576126f9613027565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105ab565b60009150506105ab565b606061274d8484600085612755565b949350505050565b6060824710156127b65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161066f565b843b6128045760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161066f565b600080866001600160a01b03168587604051612820919061303d565b60006040518083038185875af1925050503d806000811461285d576040519150601f19603f3d011682016040523d82523d6000602084013e612862565b606091505b509150915061287282828661287d565b979650505050505050565b6060831561288c575081611de7565b82511561289c5782518084602001fd5b8160405162461bcd60e51b815260040161066f9190612fbe565b80356001600160a01b03811681146128cd57600080fd5b919050565b6000806000606084860312156128e757600080fd5b6128f0846128b6565b92506128fe602085016128b6565b915061290c604085016128b6565b90509250925092565b60006020828403121561292757600080fd5b81356001600160e01b031981168114611de757600080fd5b60008083601f84011261295157600080fd5b50813567ffffffffffffffff81111561296957600080fd5b60208301915083602082850101111561298157600080fd5b9250929050565b60008060008084860360e081121561299f57600080fd5b60a08112156129ad57600080fd5b508493506129bd60a086016128b6565b925060c085013567ffffffffffffffff8111156129d957600080fd5b6129e58782880161293f565b95989497509550505050565b600080600083850360a0811215612a0757600080fd5b6080811215612a1557600080fd5b50839250608084013567ffffffffffffffff811115612a3357600080fd5b612a3f8682870161293f565b9497909650939450505050565b600060208284031215612a5e57600080fd5b5035919050565b600080600060608486031215612a7a57600080fd5b612a83846128b6565b9250612a91602085016128b6565b9150604084013590509250925092565b60008060408385031215612ab457600080fd5b82359150612ac4602084016128b6565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215612af657600080fd5b823567ffffffffffffffff80821115612b0e57600080fd5b818501915085601f830112612b2257600080fd5b813581811115612b3457612b34612acd565b8060051b604051601f19603f83011681018181108582111715612b5957612b59612acd565b604052918252848201925083810185019188831115612b7757600080fd5b938501935b82851015612b9c57612b8d856128b6565b84529385019392850192612b7c565b98975050505050505050565b60008060408385031215612bbb57600080fd5b612bc4836128b6565b9150612ac4602084016128b6565b600060208284031215612be457600080fd5b611de7826128b6565b6020808252825182820181905260009190848201906040850190845b81811015612c2e5783516001600160a01b031683529284019291840191600101612c09565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612c9557815180516001600160a01b0390811686528782015181168887015290860151168585015260609093019290850190600101612c57565b5091979650505050505050565b600080600080600060608688031215612cba57600080fd5b853567ffffffffffffffff80821115612cd257600080fd5b818801915088601f830112612ce657600080fd5b813581811115612cf557600080fd5b89602060a083028501011115612d0a57600080fd5b60208301975080965050612d20602089016128b6565b94506040880135915080821115612d3657600080fd5b50612d438882890161293f565b969995985093965092949392505050565b600060208284031215612d6657600080fd5b81518015158114611de757600080fd5b600060208284031215612d8857600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038881168252878116602083015286166040820152606081018590526080810184905260c060a08201819052600090612dfb9083018486612d8f565b9998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015612e3057612e30612e08565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612e5f57612e5f612e08565b5060010190565b60008219821115612e7957612e79612e08565b500190565b60208152600061274d602083018486612d8f565b604080825283519082018190526000906020906060840190828701845b82811015612ecb57815184529284019290840190600101612eaf565b5050506001600160a01b039490941692019190915250919050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215612f0e57600080fd5b815160028110611de757600080fd5b60005b83811015612f38578181015183820152602001612f20565b83811115610daa5750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612f81816017850160208801612f1d565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612fb2816028840160208801612f1d565b01602801949350505050565b6020815260008251806020840152612fdd816040850160208701612f1d565b601f01601f19169190910160400192915050565b600081600019048311821515161561300b5761300b612e08565b500290565b60008161301f5761301f612e08565b506000190190565b634e487b7160e01b600052603160045260246000fd5b6000825161304f818460208701612f1d565b919091019291505056fe49e347583a7b9e7f325e8963ee1f94127eba81e401796874b5a22f7c8f9d45f7a264697066735822122004a95f80bf84e61322d7c24ea4129fdd8603cbb3336804a48dda7fbccbc19cfc64736f6c63430008090033038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd91893e1a169e79f2fe8aa327b1bceb2fede7a1b76a54824f95ea0e737720954ae0b43cb2c88b4e8fc5d4ac1352ba889b22584df0c58c4b5b589731a1c9f6f29d3';

type TradeFactoryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: TradeFactoryConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TradeFactory__factory extends ContractFactory {
  constructor(...args: TradeFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'TradeFactory';
  }

  deploy(
    _masterAdmin: string,
    _swapperAdder: string,
    _swapperSetter: string,
    _strategyModifier: string,
    _mechanicsRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TradeFactory> {
    return super.deploy(
      _masterAdmin,
      _swapperAdder,
      _swapperSetter,
      _strategyModifier,
      _mechanicsRegistry,
      overrides || {}
    ) as Promise<TradeFactory>;
  }
  getDeployTransaction(
    _masterAdmin: string,
    _swapperAdder: string,
    _swapperSetter: string,
    _strategyModifier: string,
    _mechanicsRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_masterAdmin, _swapperAdder, _swapperSetter, _strategyModifier, _mechanicsRegistry, overrides || {});
  }
  attach(address: string): TradeFactory {
    return super.attach(address) as TradeFactory;
  }
  connect(signer: Signer): TradeFactory__factory {
    return super.connect(signer) as TradeFactory__factory;
  }
  static readonly contractName: 'TradeFactory';
  public readonly contractName: 'TradeFactory';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TradeFactoryInterface {
    return new utils.Interface(_abi) as TradeFactoryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TradeFactory {
    return new Contract(address, _abi, signerOrProvider) as TradeFactory;
  }
}
