/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MultiCallOptimizedSwapper, MultiCallOptimizedSwapperInterface } from '../MultiCallOptimizedSwapper';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_governor',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tradeFactory',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CallOnlyOptimizationRequired',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MultiCallRevert',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotAuthorized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'DustSent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'GovernorAccepted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'pendingGovernor',
        type: 'address',
      },
    ],
    name: 'PendingGovernorSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_tradeFactory',
        type: 'address',
      },
    ],
    name: 'TradeFactorySet',
    type: 'event',
  },
  {
    stateMutability: 'payable',
    type: 'fallback',
  },
  {
    inputs: [],
    name: 'ETH_ADDRESS',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SWAPPER_TYPE',
    outputs: [
      {
        internalType: 'enum ISwapper.SwapperType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'acceptGovernor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isGovernor',
    outputs: [
      {
        internalType: 'bool',
        name: '_isGovernor',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingGovernor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'sendDust',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_pendingGovernor',
        type: 'address',
      },
    ],
    name: 'setPendingGovernor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tradeFactory',
        type: 'address',
      },
    ],
    name: 'setTradeFactory',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenOut',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amountIn',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minAmountOut',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'swap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'swapMultiple',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tradeFactory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161131c38038061131c83398101604081905261002f91610129565b8181818180826001600160a01b0381166100a65760405162461bcd60e51b815260206004820152602e60248201527f676f7665726e61626c652f676f7665726e6f722d73686f756c642d6e6f742d6260448201526d652d7a65726f2d6164647265737360901b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b0392831617905581166100e15760405163d92e233d60e01b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b03929092169190911790555061015c945050505050565b80516001600160a01b038116811461012457600080fd5b919050565b6000806040838503121561013c57600080fd5b6101458361010d565b91506101536020840161010d565b90509250929050565b6111b18061016b6000396000f3fe6080604052600436106100a55760003560e01c8063cd985af011610061578063cd985af014610193578063e3056a34146101b5578063e43581b8146101d5578063e58bb63914610214578063e5e19b4a14610229578063f235757f1461024957005b80630c340a24146100ae5780632db8c129146100eb57806364c3d39f1461010b578063652109421461012b578063a5d4096b1461014b578063a734f06e1461016b57005b366100ac57005b005b3480156100ba57600080fd5b506000546100ce906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f757600080fd5b506100ac610106366004610f14565b610269565b34801561011757600080fd5b506100ac610126366004610f99565b6102ac565b34801561013757600080fd5b506100ac610146366004610fdb565b61048c565b34801561015757600080fd5b506100ac610166366004610ff6565b610532565b34801561017757600080fd5b506100ce73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561019f57600080fd5b506101a8600081565b6040516100e2919061107f565b3480156101c157600080fd5b506001546100ce906001600160a01b031681565b3480156101e157600080fd5b506102046101f0366004610fdb565b6000546001600160a01b0391821691161490565b60405190151581526020016100e2565b34801561022057600080fd5b506100ac610581565b34801561023557600080fd5b506004546100ce906001600160a01b031681565b34801561025557600080fd5b506100ac610264366004610fdb565b6105e5565b6000546001600160a01b0316331461029c5760405162461bcd60e51b8152600401610293906110a7565b60405180910390fd5b6102a783838361061b565b505050565b6004546001600160a01b031633146102d75760405163ea8e4eb560e01b815260040160405180910390fd5b600061031883838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107bd92505050565b9050600060ff82166001141561036e5761036784848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107c792505050565b9050610468565b60ff8216600314156103b95761036784848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061082192505050565b60ff8216600514156104045761036784848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061087b92505050565b60ff82166007141561044f5761036784848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108c592505050565b6040516306bbee3760e21b815260040160405180910390fd5b80610486576040516351ba533f60e01b815260040160405180910390fd5b50505050565b6000546001600160a01b031633146104b65760405162461bcd60e51b8152600401610293906110a7565b6001600160a01b0381166104dd5760405163d92e233d60e01b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fbda986fea33634f76bd215bacd0d368610edf55143c3ca42bd0f55040ad870b5906020015b60405180910390a150565b6004546001600160a01b0316331461055d5760405163ea8e4eb560e01b815260040160405180910390fd5b61056a878787878761090c565b61057887878787868661099c565b50505050505050565b6001546001600160a01b031633146105db5760405162461bcd60e51b815260206004820181905260248201527f676f7665726e61626c652f6f6e6c792d70656e64696e672d676f7665726e6f726044820152606401610293565b6105e3610b3c565b565b6000546001600160a01b0316331461060f5760405162461bcd60e51b8152600401610293906110a7565b61061881610b8c565b50565b6001600160a01b0383166106895760405162461bcd60e51b815260206004820152602f60248201527f636f6c6c65637461626c652d647573742f63616e742d73656e642d647573742d60448201526e746f2d7a65726f2d6164647265737360881b6064820152608401610293565b610694600283610c4e565b156106f85760405162461bcd60e51b815260206004820152602e60248201527f636f6c6c65637461626c652d647573742f746f6b656e2d69732d706172742d6f60448201526d198b5d1a194b5c1c9bdd1bd8dbdb60921b6064820152608401610293565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610759576040516001600160a01b0384169082156108fc029083906000818181858888f19350505050158015610753573d6000803e3d6000fd5b5061076d565b61076d6001600160a01b0383168483610c73565b604080516001600160a01b038086168252841660208201529081018290527f1e34c1aee8e83c2dcc14c21bb4bfeea7f46c0c998cb797ac7cc4d7a18f5c656b9060600160405180910390a1505050565b6020015160f81c90565b6000815160215b8181101561081a578084015160601c6014820185015160348301860151605484018701600080838386885af19650508561080a5750505061081a565b80605401840193505050506107ce565b5050919050565b805160218201516000919060359060601c5b8282101561087357848201601481015160348201519091605401600080838386885af196505085610865575050610873565b929092016054019150610833565b505050919050565b6000815160215b8181101561081a578084015160601c6014820185015160348301860160008083836000875af1955050846108b757505061081a565b919091016034019050610882565b805160218201516000919060359060601c5b8282101561087357848201805190602001600080838382875af1955050846108ff5750610873565b91909101602001906108d7565b6001600160a01b038516158061092957506001600160a01b038416155b8061093b57506001600160a01b038316155b156109595760405163d92e233d60e01b815260040160405180910390fd5b8161097757604051631f2a200560e01b815260040160405180910390fd5b8061099557604051631f2a200560e01b815260040160405180910390fd5b5050505050565b60006109dd83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107bd92505050565b9050600060ff821660011415610a3357610a2c84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107c792505050565b9050610b14565b60ff821660031415610a7e57610a2c84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061082192505050565b60ff821660051415610ac957610a2c84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061087b92505050565b60ff82166007141561044f57610a2c84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108c592505050565b80610b32576040516351ba533f60e01b815260040160405180910390fd5b5050505050505050565b60018054600080546001600160a01b03199081166001600160a01b0384161782559091169091556040517f7880f0fcc848e1f26e461654b100a69f8d0641e29aa29f6596c6afadbb36b5ea9190a1565b6001600160a01b038116610c005760405162461bcd60e51b815260206004820152603560248201527f676f7665726e61626c652f70656e64696e672d676f7665726e6f722d73686f756044820152746c642d6e6f742d62652d7a65726f2d61646472657360581b6064820152608401610293565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f56bddfa0cee9697cebddf9acd7f23dc6583663b05e007b877056d05017994def90602001610527565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526102a792869291600091610d03918516908490610d80565b8051909150156102a75780806020019051810190610d2191906110de565b6102a75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610293565b6060610d8f8484600085610d97565b949350505050565b606082471015610df85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610293565b843b610e465760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610293565b600080866001600160a01b03168587604051610e62919061112c565b60006040518083038185875af1925050503d8060008114610e9f576040519150601f19603f3d011682016040523d82523d6000602084013e610ea4565b606091505b5091509150610eb4828286610ebf565b979650505050505050565b60608315610ece575081610c6c565b825115610ede5782518084602001fd5b8160405162461bcd60e51b81526004016102939190611148565b80356001600160a01b0381168114610f0f57600080fd5b919050565b600080600060608486031215610f2957600080fd5b610f3284610ef8565b9250610f4060208501610ef8565b9150604084013590509250925092565b60008083601f840112610f6257600080fd5b50813567ffffffffffffffff811115610f7a57600080fd5b602083019150836020828501011115610f9257600080fd5b9250929050565b60008060208385031215610fac57600080fd5b823567ffffffffffffffff811115610fc357600080fd5b610fcf85828601610f50565b90969095509350505050565b600060208284031215610fed57600080fd5b610c6c82610ef8565b600080600080600080600060c0888a03121561101157600080fd5b61101a88610ef8565b965061102860208901610ef8565b955061103660408901610ef8565b9450606088013593506080880135925060a088013567ffffffffffffffff81111561106057600080fd5b61106c8a828b01610f50565b989b979a50959850939692959293505050565b60208101600283106110a157634e487b7160e01b600052602160045260246000fd5b91905290565b60208082526018908201527f676f7665726e61626c652f6f6e6c792d676f7665726e6f720000000000000000604082015260600190565b6000602082840312156110f057600080fd5b81518015158114610c6c57600080fd5b60005b8381101561111b578181015183820152602001611103565b838111156104865750506000910152565b6000825161113e818460208701611100565b9190910192915050565b6020815260008251806020840152611167816040850160208701611100565b601f01601f1916919091016040019291505056fea2646970667358221220f75c90352c040c7925467db16c212b0392bc95239c1408c49272c1ba713e350764736f6c63430008090033';

type MultiCallOptimizedSwapperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MultiCallOptimizedSwapperConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiCallOptimizedSwapper__factory extends ContractFactory {
  constructor(...args: MultiCallOptimizedSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MultiCallOptimizedSwapper';
  }

  deploy(
    _governor: string,
    _tradeFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiCallOptimizedSwapper> {
    return super.deploy(_governor, _tradeFactory, overrides || {}) as Promise<MultiCallOptimizedSwapper>;
  }
  getDeployTransaction(
    _governor: string,
    _tradeFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_governor, _tradeFactory, overrides || {});
  }
  attach(address: string): MultiCallOptimizedSwapper {
    return super.attach(address) as MultiCallOptimizedSwapper;
  }
  connect(signer: Signer): MultiCallOptimizedSwapper__factory {
    return super.connect(signer) as MultiCallOptimizedSwapper__factory;
  }
  static readonly contractName: 'MultiCallOptimizedSwapper';
  public readonly contractName: 'MultiCallOptimizedSwapper';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiCallOptimizedSwapperInterface {
    return new utils.Interface(_abi) as MultiCallOptimizedSwapperInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MultiCallOptimizedSwapper {
    return new Contract(address, _abi, signerOrProvider) as MultiCallOptimizedSwapper;
  }
}
