/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Governable, GovernableInterface } from '../Governable';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_governor',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'GovernorAccepted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'pendingGovernor',
        type: 'address',
      },
    ],
    name: 'PendingGovernorSet',
    type: 'event',
  },
  {
    inputs: [],
    name: 'acceptGovernor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isGovernor',
    outputs: [
      {
        internalType: 'bool',
        name: '_isGovernor',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingGovernor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_pendingGovernor',
        type: 'address',
      },
    ],
    name: 'setPendingGovernor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161043f38038061043f83398101604081905261002f916100c5565b6001600160a01b0381166100a05760405162461bcd60e51b815260206004820152602e60248201527f676f7665726e61626c652f676f7665726e6f722d73686f756c642d6e6f742d6260448201526d652d7a65726f2d6164647265737360901b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100f5565b6000602082840312156100d757600080fd5b81516001600160a01b03811681146100ee57600080fd5b9392505050565b61033b806101046000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630c340a241461005c578063e3056a341461008c578063e43581b81461009f578063e58bb639146100d1578063f235757f146100db575b600080fd5b60005461006f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60015461006f906001600160a01b031681565b6100c16100ad3660046102d5565b6000546001600160a01b0391821691161490565b6040519015158152602001610083565b6100d96100ee565b005b6100d96100e93660046102d5565b610157565b6001546001600160a01b0316331461014d5760405162461bcd60e51b815260206004820181905260248201527f676f7665726e61626c652f6f6e6c792d70656e64696e672d676f7665726e6f7260448201526064015b60405180910390fd5b6101556101bd565b565b6000546001600160a01b031633146101b15760405162461bcd60e51b815260206004820152601860248201527f676f7665726e61626c652f6f6e6c792d676f7665726e6f7200000000000000006044820152606401610144565b6101ba8161020d565b50565b60018054600080546001600160a01b03199081166001600160a01b0384161782559091169091556040517f7880f0fcc848e1f26e461654b100a69f8d0641e29aa29f6596c6afadbb36b5ea9190a1565b6001600160a01b0381166102815760405162461bcd60e51b815260206004820152603560248201527f676f7665726e61626c652f70656e64696e672d676f7665726e6f722d73686f756044820152746c642d6e6f742d62652d7a65726f2d61646472657360581b6064820152608401610144565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f56bddfa0cee9697cebddf9acd7f23dc6583663b05e007b877056d05017994def9060200160405180910390a150565b6000602082840312156102e757600080fd5b81356001600160a01b03811681146102fe57600080fd5b939250505056fea2646970667358221220215d556156ca14660ed13ffddae3450de3c3752ec0563de6827e5ba44fb0ef3564736f6c63430008090033';

type GovernableConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: GovernableConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Governable__factory extends ContractFactory {
  constructor(...args: GovernableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Governable';
  }

  deploy(_governor: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<Governable> {
    return super.deploy(_governor, overrides || {}) as Promise<Governable>;
  }
  getDeployTransaction(_governor: string, overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(_governor, overrides || {});
  }
  attach(address: string): Governable {
    return super.attach(address) as Governable;
  }
  connect(signer: Signer): Governable__factory {
    return super.connect(signer) as Governable__factory;
  }
  static readonly contractName: 'Governable';
  public readonly contractName: 'Governable';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernableInterface {
    return new utils.Interface(_abi) as GovernableInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Governable {
    return new Contract(address, _abi, signerOrProvider) as Governable;
  }
}
