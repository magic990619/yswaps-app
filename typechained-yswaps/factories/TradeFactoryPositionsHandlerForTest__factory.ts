/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { TradeFactoryPositionsHandlerForTest, TradeFactoryPositionsHandlerForTestInterface } from '../TradeFactoryPositionsHandlerForTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_masterAdmin',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_swapperAdder',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_swapperSetter',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_strategyModifier',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AllowanceShouldBeZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidSwapper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTrade',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotAsyncSwapper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSyncSwapper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SwapperInUse',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MASTER_ADMIN',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STRATEGY',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STRATEGY_MANAGER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SWAPPER_ADDER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SWAPPER_SETTER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'addSwapperInternal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
    ],
    name: 'addSwapperToStrategyInternal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '__swappers',
        type: 'address[]',
      },
    ],
    name: 'addSwappers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenOut',
        type: 'address',
      },
    ],
    name: 'disable',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenOut',
        type: 'address',
      },
    ],
    name: 'disableByAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenOut',
        type: 'address',
      },
    ],
    name: 'enable',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enabledTrades',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: '_strategy',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: '_tokenOut',
            type: 'address',
          },
        ],
        internalType: 'struct ITradeFactoryPositionsHandler.EnabledTrade[]',
        name: '_enabledTrades',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'isSwapper',
    outputs: [
      {
        internalType: 'bool',
        name: '_isSwapper',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
    ],
    name: 'removeSwapperFromStrategyInternal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'removeSwapperInternal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '__swappers',
        type: 'address[]',
      },
    ],
    name: 'removeSwappers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'setStrategySyncSwapper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'strategySyncSwapper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'swapperStrategies',
    outputs: [
      {
        internalType: 'address[]',
        name: '_strategies',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'swappers',
    outputs: [
      {
        internalType: 'address[]',
        name: '_swappersList',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162001db238038062001db2833981016040819052620000349162000353565b808484848181846001600160a01b038116620000635760405163d92e233d60e01b815260040160405180910390fd5b6200007e60008051602062001d92833981519152806200023b565b6200009960008051602062001d928339815191528262000286565b506001600160a01b0382161580620000b857506001600160a01b038116155b15620000d75760405163d92e233d60e01b815260040160405180910390fd5b6200010160008051602062001d5283398151915260008051602062001d928339815191526200023b565b6200013c7fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b91160008051602062001d928339815191526200023b565b6200015760008051602062001d528339815191528362000286565b620001837fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b9118262000286565b50505050506001600160a01b038116620001b05760405163d92e233d60e01b815260040160405180910390fd5b620001eb7f49e347583a7b9e7f325e8963ee1f94127eba81e401796874b5a22f7c8f9d45f760008051602062001d728339815191526200023b565b6200021560008051602062001d7283398151915260008051602062001d928339815191526200023b565b6200023060008051602062001d728339815191528262000286565b5050505050620003b0565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b62000292828262000296565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000292576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620002f23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b80516001600160a01b03811681146200034e57600080fd5b919050565b600080600080608085870312156200036a57600080fd5b620003758562000336565b9350620003856020860162000336565b9250620003956040860162000336565b9150620003a56060860162000336565b905092959194509250565b61199280620003c06000396000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c8063851b3288116100f9578063bc90fa0311610097578063d547741f11610071578063d547741f1461040e578063e454a5ed14610421578063f1071c8114610448578063f7bd381f1461045b57600080fd5b8063bc90fa03146103b2578063cbf8e6c4146103c5578063ccf61a41146103cd57600080fd5b80639cd38be5116100d35780639cd38be51461035d5780639fc2c47614610370578063a217fddf14610397578063b64230ba1461039f57600080fd5b8063851b328814610324578063907ab0081461033757806391d148541461034a57600080fd5b80633c8888fa116101665780634d1dd98f116101405780634d1dd98f146102a157806350425491146102c85780635163b477146102e8578063687020d8146102fd57600080fd5b80633c8888fa146102685780634a2c1bab1461027b5780634c8541261461028e57600080fd5b8062b8ff92146101ad57806301ffc9a7146101c2578063185025ef146101ea578063248a9ca31461021f5780632f2ff15d1461024257806336568abe14610255575b600080fd5b6101c06101bb3660046114ef565b61046e565b005b6101d56101d0366004611532565b610502565b60405190151581526020015b60405180910390f35b6102117f49e347583a7b9e7f325e8963ee1f94127eba81e401796874b5a22f7c8f9d45f781565b6040519081526020016101e1565b61021161022d36600461155c565b60009081526020819052604090206001015490565b6101c0610250366004611575565b610539565b6101c0610263366004611575565b610564565b6101c06102763660046115a1565b6105e7565b6101c06102893660046115e1565b610609565b6101c061029c3660046115a1565b6106cd565b6102117fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b91181565b6102db6102d63660046116a6565b6107a3565b6040516101e191906116c1565b6102f06107c7565b6040516101e1919061170e565b6102117f038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd981565b6101c06103323660046116a6565b610a81565b6101c06103453660046115e1565b610a8c565b6101d5610358366004611575565b610b6a565b6101c061036b3660046115a1565b610b93565b6102117f1893e1a169e79f2fe8aa327b1bceb2fede7a1b76a54824f95ea0e737720954ae81565b610211600081565b6101d56103ad3660046116a6565b610bc9565b6101c06103c03660046115a1565b610bd6565b6102db610bf8565b6103f66103db3660046116a6565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101e1565b6101c061041c366004611575565b610c09565b6102117f0b43cb2c88b4e8fc5d4ac1352ba889b22584df0c58c4b5b589731a1c9f6f29d381565b6101c06104563660046116a6565b610c2f565b6101c06104693660046115a1565b610c3a565b7f1893e1a169e79f2fe8aa327b1bceb2fede7a1b76a54824f95ea0e737720954ae6104998133610e05565b60405163abb347a960e01b81526001600160a01b038481166004830152838116602483015285169063abb347a990604401600060405180830381600087803b1580156104e457600080fd5b505af11580156104f8573d6000803e3d6000fd5b5050505050505050565b60006001600160e01b03198216637965db0b60e01b148061053357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152602081905260409020600101546105558133610e05565b61055f8383610e69565b505050565b6001600160a01b03811633146105d95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6105e38282610eed565b5050565b6001600160a01b038216600090815260036020526040902061055f9082610f52565b7f038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd96106348133610e05565b60005b825181101561055f5760006001600160a01b031683828151811061065d5761065d611776565b60200260200101516001600160a01b0316141561068d5760405163d92e233d60e01b815260040160405180910390fd5b6106ba8382815181106106a2576106a2611776565b60200260200101516001610f5290919063ffffffff16565b50806106c5816117a2565b915050610637565b7f49e347583a7b9e7f325e8963ee1f94127eba81e401796874b5a22f7c8f9d45f76106f88133610e05565b6001600160a01b038316158061071557506001600160a01b038216155b156107335760405163d92e233d60e01b815260040160405180910390fd5b61073e600533610f52565b503360009081526007602052604090206107589084610f52565b503360009081526008602090815260408083206001600160a01b038716845290915290206107869083610f52565b61055f5760405163d69b537960e01b815260040160405180910390fd5b6001600160a01b038116600090815260036020526040902060609061053390610f6e565b60606000805b6107d76005610f6e565b518110156108a65760006107ec600583610f7b565b6001600160a01b03811660009081526007602052604081209192509061081190610f6e565b905060005b815181101561089057600082828151811061083357610833611776565b6020908102919091018101516001600160a01b03808716600090815260088452604080822092841682529190935290912090915061087090610f87565b61087a90876117bd565b9550508080610888906117a2565b915050610816565b505050808061089e906117a2565b9150506107cd565b508067ffffffffffffffff8111156108c0576108c06115cb565b60405190808252806020026020018201604052801561090b57816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816108de5790505b5091506000805b61091c6005610f6e565b51811015610a7b576000610931600583610f7b565b6001600160a01b03811660009081526007602052604081209192509061095690610f6e565b905060005b8151811015610a6557600082828151811061097857610978611776565b6020908102919091018101516001600160a01b03808716600090815260088452604080822092841682529190935282209092506109b490610f6e565b905060005b8151811015610a4f576040518060600160405280876001600160a01b03168152602001846001600160a01b031681526020018383815181106109fd576109fd611776565b60200260200101516001600160a01b03168152508a8981518110610a2357610a23611776565b60200260200101819052508780610a39906117a2565b9850508080610a47906117a2565b9150506109b9565b5050508080610a5d906117a2565b91505061095b565b5050508080610a73906117a2565b915050610912565b50505090565b6105e3600182610f91565b7f038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd9610ab78133610e05565b60005b825181101561055f576000610b0b60036000868581518110610ade57610ade611776565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020610f87565b1115610b2a576040516361c45a0f60e01b815260040160405180910390fd5b610b57838281518110610b3f57610b3f611776565b60200260200101516001610f9190919063ffffffff16565b5080610b62816117a2565b915050610aba565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b7f49e347583a7b9e7f325e8963ee1f94127eba81e401796874b5a22f7c8f9d45f7610bbe8133610e05565b61055f338484610fa6565b600061053360018361114d565b6001600160a01b038216600090815260036020526040902061055f9082610f91565b6060610c046001610f6e565b905090565b600082815260208190526040902060010154610c258133610e05565b61055f8383610eed565b6105e3600182610f52565b7fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b911610c658133610e05565b6001600160a01b0383161580610c8257506001600160a01b038216155b15610ca05760405163d92e233d60e01b815260040160405180910390fd5b6001826001600160a01b031663cd985af06040518163ffffffff1660e01b815260040160206040518083038186803b158015610cdb57600080fd5b505afa158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1391906117eb565b6001811115610d2457610d246117d5565b14610d4257604051634b3d6f3360e11b815260040160405180910390fd5b610d4d60018361114d565b610d6a576040516364a7bd4d60e11b815260040160405180910390fd5b6001600160a01b038381166000908152600460205260409020541615610dbd576001600160a01b0380841660009081526004602090815260408083205490931682526003905220610dbb9084610f91565b505b6001600160a01b03838116600090815260046020908152604080832080546001600160a01b03191694871694851790559282526003905220610dff9084610f52565b50505050565b610e0f8282610b6a565b6105e357610e27816001600160a01b0316601461116f565b610e3283602061116f565b604051602001610e43929190611838565b60408051601f198184030181529082905262461bcd60e51b82526105d0916004016118ad565b610e738282610b6a565b6105e3576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610ea93390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610ef78282610b6a565b156105e3576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610f67836001600160a01b03841661130b565b9392505050565b60606000610f678361135a565b6000610f6783836113b6565b6000610533825490565b6000610f67836001600160a01b0384166113e0565b6001600160a01b0382161580610fc357506001600160a01b038116155b15610fe15760405163d92e233d60e01b815260040160405180910390fd5b604051636eb1769f60e11b81523360048201523060248201526001600160a01b0383169063dd62ed3e9060440160206040518083038186803b15801561102657600080fd5b505afa15801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e91906118e0565b1561107c57604051633c553c4360e11b815260040160405180910390fd5b6001600160a01b0380841660009081526008602090815260408083209386168352929052206110ab9082610f91565b6110c85760405163d69b537960e01b815260040160405180910390fd5b6001600160a01b0380841660009081526008602090815260408083209386168352929052206110f690610f87565b61055f576001600160a01b038316600090815260076020526040902061111c9083610f91565b506001600160a01b038316600090815260076020526040902061113e90610f87565b61055f57610dff600584610f91565b6001600160a01b03811660009081526001830160205260408120541515610f67565b6060600061117e8360026118f9565b6111899060026117bd565b67ffffffffffffffff8111156111a1576111a16115cb565b6040519080825280601f01601f1916602001820160405280156111cb576020820181803683370190505b509050600360fc1b816000815181106111e6576111e6611776565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061121557611215611776565b60200101906001600160f81b031916908160001a90535060006112398460026118f9565b6112449060016117bd565b90505b60018111156112bc576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061127857611278611776565b1a60f81b82828151811061128e5761128e611776565b60200101906001600160f81b031916908160001a90535060049490941c936112b581611918565b9050611247565b508315610f675760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105d0565b600081815260018301602052604081205461135257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610533565b506000610533565b6060816000018054806020026020016040519081016040528092919081815260200182805480156113aa57602002820191906000526020600020905b815481526020019060010190808311611396575b50505050509050919050565b60008260000182815481106113cd576113cd611776565b9060005260206000200154905092915050565b600081815260018301602052604081205480156114c957600061140460018361192f565b85549091506000906114189060019061192f565b905081811461147d57600086600001828154811061143857611438611776565b906000526020600020015490508087600001848154811061145b5761145b611776565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061148e5761148e611946565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610533565b6000915050610533565b80356001600160a01b03811681146114ea57600080fd5b919050565b60008060006060848603121561150457600080fd5b61150d846114d3565b925061151b602085016114d3565b9150611529604085016114d3565b90509250925092565b60006020828403121561154457600080fd5b81356001600160e01b031981168114610f6757600080fd5b60006020828403121561156e57600080fd5b5035919050565b6000806040838503121561158857600080fd5b82359150611598602084016114d3565b90509250929050565b600080604083850312156115b457600080fd5b6115bd836114d3565b9150611598602084016114d3565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156115f457600080fd5b823567ffffffffffffffff8082111561160c57600080fd5b818501915085601f83011261162057600080fd5b813581811115611632576116326115cb565b8060051b604051601f19603f83011681018181108582111715611657576116576115cb565b60405291825284820192508381018501918883111561167557600080fd5b938501935b8285101561169a5761168b856114d3565b8452938501939285019261167a565b98975050505050505050565b6000602082840312156116b857600080fd5b610f67826114d3565b6020808252825182820181905260009190848201906040850190845b818110156117025783516001600160a01b0316835292840192918401916001016116dd565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561176957815180516001600160a01b039081168652878201518116888701529086015116858501526060909301929085019060010161172b565b5091979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156117b6576117b661178c565b5060010190565b600082198211156117d0576117d061178c565b500190565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156117fd57600080fd5b815160028110610f6757600080fd5b60005b8381101561182757818101518382015260200161180f565b83811115610dff5750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161187081601785016020880161180c565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516118a181602884016020880161180c565b01602801949350505050565b60208152600082518060208401526118cc81604085016020870161180c565b601f01601f19169190910160400192915050565b6000602082840312156118f257600080fd5b5051919050565b60008160001904831182151516156119135761191361178c565b500290565b6000816119275761192761178c565b506000190190565b6000828210156119415761194161178c565b500390565b634e487b7160e01b600052603160045260246000fdfea26469706673582212207d1003e8815ef698b044b598600d75f7cb2751bbea3d9cec9943ae68baa338b964736f6c63430008090033038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd91893e1a169e79f2fe8aa327b1bceb2fede7a1b76a54824f95ea0e737720954ae0b43cb2c88b4e8fc5d4ac1352ba889b22584df0c58c4b5b589731a1c9f6f29d3';

type TradeFactoryPositionsHandlerForTestConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: TradeFactoryPositionsHandlerForTestConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class TradeFactoryPositionsHandlerForTest__factory extends ContractFactory {
  constructor(...args: TradeFactoryPositionsHandlerForTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'TradeFactoryPositionsHandlerForTest';
  }

  deploy(
    _masterAdmin: string,
    _swapperAdder: string,
    _swapperSetter: string,
    _strategyModifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TradeFactoryPositionsHandlerForTest> {
    return super.deploy(
      _masterAdmin,
      _swapperAdder,
      _swapperSetter,
      _strategyModifier,
      overrides || {}
    ) as Promise<TradeFactoryPositionsHandlerForTest>;
  }
  getDeployTransaction(
    _masterAdmin: string,
    _swapperAdder: string,
    _swapperSetter: string,
    _strategyModifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_masterAdmin, _swapperAdder, _swapperSetter, _strategyModifier, overrides || {});
  }
  attach(address: string): TradeFactoryPositionsHandlerForTest {
    return super.attach(address) as TradeFactoryPositionsHandlerForTest;
  }
  connect(signer: Signer): TradeFactoryPositionsHandlerForTest__factory {
    return super.connect(signer) as TradeFactoryPositionsHandlerForTest__factory;
  }
  static readonly contractName: 'TradeFactoryPositionsHandlerForTest';
  public readonly contractName: 'TradeFactoryPositionsHandlerForTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TradeFactoryPositionsHandlerForTestInterface {
    return new utils.Interface(_abi) as TradeFactoryPositionsHandlerForTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TradeFactoryPositionsHandlerForTest {
    return new Contract(address, _abi, signerOrProvider) as TradeFactoryPositionsHandlerForTest;
  }
}
