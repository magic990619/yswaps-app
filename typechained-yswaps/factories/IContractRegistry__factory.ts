/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type { IContractRegistry, IContractRegistryInterface } from '../IContractRegistry';

const _abi = [
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'contractName',
        type: 'bytes32',
      },
    ],
    name: 'addressOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class IContractRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IContractRegistryInterface {
    return new utils.Interface(_abi) as IContractRegistryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IContractRegistry {
    return new Contract(address, _abi, signerOrProvider) as IContractRegistry;
  }
}
