/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { SolidlySwapper, SolidlySwapperInterface } from '../SolidlySwapper';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_governor',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tradeFactory',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_ROUTER',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'IncorrectSwapInformation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotAuthorized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'DustSent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'GovernorAccepted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'pendingGovernor',
        type: 'address',
      },
    ],
    name: 'PendingGovernorSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_tradeFactory',
        type: 'address',
      },
    ],
    name: 'TradeFactorySet',
    type: 'event',
  },
  {
    inputs: [],
    name: 'ETH_ADDRESS',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ROUTER',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SWAPPER_TYPE',
    outputs: [
      {
        internalType: 'enum ISwapper.SwapperType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'acceptGovernor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isGovernor',
    outputs: [
      {
        internalType: 'bool',
        name: '_isGovernor',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingGovernor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'sendDust',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_pendingGovernor',
        type: 'address',
      },
    ],
    name: 'setPendingGovernor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tradeFactory',
        type: 'address',
      },
    ],
    name: 'setTradeFactory',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenOut',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amountIn',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minAmountOut',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'swap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tradeFactory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a06040523480156200001157600080fd5b506040516200136e3803806200136e833981016040819052620000349162000131565b828280826001600160a01b038116620000aa5760405162461bcd60e51b815260206004820152602e60248201527f676f7665726e61626c652f676f7665726e6f722d73686f756c642d6e6f742d6260448201526d652d7a65726f2d6164647265737360901b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b039283161790558116620000e65760405163d92e233d60e01b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0392831617905592909216608052506200017b92505050565b80516001600160a01b03811681146200012c57600080fd5b919050565b6000806000606084860312156200014757600080fd5b620001528462000114565b9250620001626020850162000114565b9150620001726040850162000114565b90509250925092565b6080516111c2620001ac60003960008181610103015281816106d101528181610794015261083801526111c26000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063cd985af011610071578063cd985af014610166578063e3056a341461017b578063e43581b81461018e578063e58bb639146101c0578063e5e19b4a146101c8578063f235757f146101db57600080fd5b80630c340a24146100b95780632db8c129146100e957806332fe7b26146100fe5780636521094214610125578063a5d4096b14610138578063a734f06e1461014b575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fc6100f7366004610cb0565b6101ee565b005b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b6100fc610133366004610cec565b610231565b6100fc610146366004610d07565b6102d7565b6100cc73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b61016e600081565b6040516100e09190610dbf565b6001546100cc906001600160a01b031681565b6101b061019c366004610cec565b6000546001600160a01b0391821691161490565b60405190151581526020016100e0565b6100fc610326565b6004546100cc906001600160a01b031681565b6100fc6101e9366004610cec565b61038a565b6000546001600160a01b031633146102215760405162461bcd60e51b815260040161021890610de7565b60405180910390fd5b61022c8383836103c0565b505050565b6000546001600160a01b0316331461025b5760405162461bcd60e51b815260040161021890610de7565b6001600160a01b0381166102825760405163d92e233d60e01b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fbda986fea33634f76bd215bacd0d368610edf55143c3ca42bd0f55040ad870b5906020015b60405180910390a150565b6004546001600160a01b031633146103025760405163ea8e4eb560e01b815260040160405180910390fd5b61030f8787878787610562565b61031d8787878786866105f2565b50505050505050565b6001546001600160a01b031633146103805760405162461bcd60e51b815260206004820181905260248201527f676f7665726e61626c652f6f6e6c792d70656e64696e672d676f7665726e6f726044820152606401610218565b6103886108d8565b565b6000546001600160a01b031633146103b45760405162461bcd60e51b815260040161021890610de7565b6103bd81610928565b50565b6001600160a01b03831661042e5760405162461bcd60e51b815260206004820152602f60248201527f636f6c6c65637461626c652d647573742f63616e742d73656e642d647573742d60448201526e746f2d7a65726f2d6164647265737360881b6064820152608401610218565b6104396002836109ea565b1561049d5760405162461bcd60e51b815260206004820152602e60248201527f636f6c6c65637461626c652d647573742f746f6b656e2d69732d706172742d6f60448201526d198b5d1a194b5c1c9bdd1bd8dbdb60921b6064820152608401610218565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156104fe576040516001600160a01b0384169082156108fc029083906000818181858888f193505050501580156104f8573d6000803e3d6000fd5b50610512565b6105126001600160a01b0383168483610a0f565b604080516001600160a01b038086168252841660208201529081018290527f1e34c1aee8e83c2dcc14c21bb4bfeea7f46c0c998cb797ac7cc4d7a18f5c656b9060600160405180910390a1505050565b6001600160a01b038516158061057f57506001600160a01b038416155b8061059157506001600160a01b038316155b156105af5760405163d92e233d60e01b815260040160405180910390fd5b816105cd57604051631f2a200560e01b815260040160405180910390fd5b806105eb57604051631f2a200560e01b815260040160405180910390fd5b5050505050565b600061060082840184610ec0565b90508060008151811061061557610615610f9a565b6020026020010151600001516001600160a01b0316866001600160a01b031614158061067d5750806001825161064b9190610fb0565b8151811061065b5761065b610f9a565b6020026020010151602001516001600160a01b0316856001600160a01b031614155b1561069b5760405163e625f81360e01b815260040160405180910390fd5b806000815181106106ae576106ae610f9a565b60209081029190910101515160405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600060248301529091169063095ea7b390604401602060405180830381600087803b15801561072557600080fd5b505af1158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d9190610fd5565b508060008151811061077157610771610f9a565b60209081029190910101515160405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018790529091169063095ea7b390604401602060405180830381600087803b1580156107e857600080fd5b505af11580156107fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108209190610fd5565b50604051631e82ecdb60e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f41766d89061087890879060009086908d9060001990600401610ff2565b600060405180830381600087803b15801561089257600080fd5b505af11580156108a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108ce9190810190611087565b5050505050505050565b60018054600080546001600160a01b03199081166001600160a01b0384161782559091169091556040517f7880f0fcc848e1f26e461654b100a69f8d0641e29aa29f6596c6afadbb36b5ea9190a1565b6001600160a01b03811661099c5760405162461bcd60e51b815260206004820152603560248201527f676f7665726e61626c652f70656e64696e672d676f7665726e6f722d73686f756044820152746c642d6e6f742d62652d7a65726f2d61646472657360581b6064820152608401610218565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f56bddfa0cee9697cebddf9acd7f23dc6583663b05e007b877056d05017994def906020016102cc565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261022c92869291600091610a9f918516908490610b1c565b80519091501561022c5780806020019051810190610abd9190610fd5565b61022c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610218565b6060610b2b8484600085610b33565b949350505050565b606082471015610b945760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610218565b843b610be25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610218565b600080866001600160a01b03168587604051610bfe919061113d565b60006040518083038185875af1925050503d8060008114610c3b576040519150601f19603f3d011682016040523d82523d6000602084013e610c40565b606091505b5091509150610c50828286610c5b565b979650505050505050565b60608315610c6a575081610a08565b825115610c7a5782518084602001fd5b8160405162461bcd60e51b81526004016102189190611159565b80356001600160a01b0381168114610cab57600080fd5b919050565b600080600060608486031215610cc557600080fd5b610cce84610c94565b9250610cdc60208501610c94565b9150604084013590509250925092565b600060208284031215610cfe57600080fd5b610a0882610c94565b600080600080600080600060c0888a031215610d2257600080fd5b610d2b88610c94565b9650610d3960208901610c94565b9550610d4760408901610c94565b9450606088013593506080880135925060a088013567ffffffffffffffff80821115610d7257600080fd5b818a0191508a601f830112610d8657600080fd5b813581811115610d9557600080fd5b8b6020828501011115610da757600080fd5b60208301945080935050505092959891949750929550565b6020810160028310610de157634e487b7160e01b600052602160045260246000fd5b91905290565b60208082526018908201527f676f7665726e61626c652f6f6e6c792d676f7665726e6f720000000000000000604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610e5757610e57610e1e565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e8657610e86610e1e565b604052919050565b600067ffffffffffffffff821115610ea857610ea8610e1e565b5060051b60200190565b80151581146103bd57600080fd5b60006020808385031215610ed357600080fd5b823567ffffffffffffffff811115610eea57600080fd5b8301601f81018513610efb57600080fd5b8035610f0e610f0982610e8e565b610e5d565b81815260609182028301840191848201919088841115610f2d57600080fd5b938501935b83851015610f8e5780858a031215610f4a5760008081fd5b610f52610e34565b610f5b86610c94565b8152610f68878701610c94565b87820152604080870135610f7b81610eb2565b9082015283529384019391850191610f32565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600082821015610fd057634e487b7160e01b600052601160045260246000fd5b500390565b600060208284031215610fe757600080fd5b8151610a0881610eb2565b600060a0820187835260208781850152604060a08186015282885180855260c087019150838a01945060005b8181101561105b57855180516001600160a01b0390811685528682015116868501528401511515848401529484019460609092019160010161101e565b50506001600160a01b0388166060870152935061107792505050565b8260808301529695505050505050565b6000602080838503121561109a57600080fd5b825167ffffffffffffffff8111156110b157600080fd5b8301601f810185136110c257600080fd5b80516110d0610f0982610e8e565b81815260059190911b820183019083810190878311156110ef57600080fd5b928401925b82841015610c50578351825292840192908401906110f4565b60005b83811015611128578181015183820152602001611110565b83811115611137576000848401525b50505050565b6000825161114f81846020870161110d565b9190910192915050565b602081526000825180602084015261117881604085016020870161110d565b601f01601f1916919091016040019291505056fea264697066735822122087922cc5180650990277eb63d42d5d7d10918b0c5091d58c264b0bfa28f33c5964736f6c63430008090033';

type SolidlySwapperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: SolidlySwapperConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SolidlySwapper__factory extends ContractFactory {
  constructor(...args: SolidlySwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'SolidlySwapper';
  }

  deploy(
    _governor: string,
    _tradeFactory: string,
    _ROUTER: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SolidlySwapper> {
    return super.deploy(_governor, _tradeFactory, _ROUTER, overrides || {}) as Promise<SolidlySwapper>;
  }
  getDeployTransaction(
    _governor: string,
    _tradeFactory: string,
    _ROUTER: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_governor, _tradeFactory, _ROUTER, overrides || {});
  }
  attach(address: string): SolidlySwapper {
    return super.attach(address) as SolidlySwapper;
  }
  connect(signer: Signer): SolidlySwapper__factory {
    return super.connect(signer) as SolidlySwapper__factory;
  }
  static readonly contractName: 'SolidlySwapper';
  public readonly contractName: 'SolidlySwapper';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SolidlySwapperInterface {
    return new utils.Interface(_abi) as SolidlySwapperInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SolidlySwapper {
    return new Contract(address, _abi, signerOrProvider) as SolidlySwapper;
  }
}
