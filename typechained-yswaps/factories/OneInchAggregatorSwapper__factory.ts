/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { OneInchAggregatorSwapper, OneInchAggregatorSwapperInterface } from '../OneInchAggregatorSwapper';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_governor',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tradeFactory',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_aggregationRouter',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'IncorrectSwapInformation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotAuthorized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'DustSent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'GovernorAccepted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'pendingGovernor',
        type: 'address',
      },
    ],
    name: 'PendingGovernorSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_tradeFactory',
        type: 'address',
      },
    ],
    name: 'TradeFactorySet',
    type: 'event',
  },
  {
    inputs: [],
    name: 'AGGREGATION_ROUTER_V3',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ETH_ADDRESS',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SWAPPER_TYPE',
    outputs: [
      {
        internalType: 'enum ISwapper.SwapperType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'acceptGovernor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'isGovernor',
    outputs: [
      {
        internalType: 'bool',
        name: '_isGovernor',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingGovernor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'sendDust',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_pendingGovernor',
        type: 'address',
      },
    ],
    name: 'setPendingGovernor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tradeFactory',
        type: 'address',
      },
    ],
    name: 'setTradeFactory',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenOut',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amountIn',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minAmountOut',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'swap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tradeFactory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a06040523480156200001157600080fd5b506040516200137138038062001371833981016040819052620000349162000131565b828280826001600160a01b038116620000aa5760405162461bcd60e51b815260206004820152602e60248201527f676f7665726e61626c652f676f7665726e6f722d73686f756c642d6e6f742d6260448201526d652d7a65726f2d6164647265737360901b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b039283161790558116620000e65760405163d92e233d60e01b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0392831617905592909216608052506200017b92505050565b80516001600160a01b03811681146200012c57600080fd5b919050565b6000806000606084860312156200014757600080fd5b620001528462000114565b9250620001626020850162000114565b9150620001726040850162000114565b90509250925092565b6080516111c6620001ab6000396000818160ee015281816106c601528181610769015261080b01526111c66000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063cd985af011610071578063cd985af014610166578063e3056a341461017b578063e43581b81461018e578063e58bb639146101c0578063e5e19b4a146101c8578063f235757f146101db57600080fd5b80630c340a24146100b957806316fa7bbf146100e95780632db8c129146101105780636521094214610125578063a5d4096b14610138578063a734f06e1461014b575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61012361011e366004610c83565b6101ee565b005b610123610133366004610cc4565b610231565b610123610146366004610ce1565b6102d7565b6100cc73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b61016e600081565b6040516100e09190610d9f565b6001546100cc906001600160a01b031681565b6101b061019c366004610cc4565b6000546001600160a01b0391821691161490565b60405190151581526020016100e0565b610123610326565b6004546100cc906001600160a01b031681565b6101236101e9366004610cc4565b61038a565b6000546001600160a01b031633146102215760405162461bcd60e51b815260040161021890610dc7565b60405180910390fd5b61022c8383836103c0565b505050565b6000546001600160a01b0316331461025b5760405162461bcd60e51b815260040161021890610dc7565b6001600160a01b0381166102825760405163d92e233d60e01b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fbda986fea33634f76bd215bacd0d368610edf55143c3ca42bd0f55040ad870b5906020015b60405180910390a150565b6004546001600160a01b031633146103025760405163ea8e4eb560e01b815260040160405180910390fd5b61030f8787878787610562565b61031d8787878786866105f2565b50505050505050565b6001546001600160a01b031633146103805760405162461bcd60e51b815260206004820181905260248201527f676f7665726e61626c652f6f6e6c792d70656e64696e672d676f7665726e6f726044820152606401610218565b6103886108a2565b565b6000546001600160a01b031633146103b45760405162461bcd60e51b815260040161021890610dc7565b6103bd816108f2565b50565b6001600160a01b03831661042e5760405162461bcd60e51b815260206004820152602f60248201527f636f6c6c65637461626c652d647573742f63616e742d73656e642d647573742d60448201526e746f2d7a65726f2d6164647265737360881b6064820152608401610218565b6104396002836109b4565b1561049d5760405162461bcd60e51b815260206004820152602e60248201527f636f6c6c65637461626c652d647573742f746f6b656e2d69732d706172742d6f60448201526d198b5d1a194b5c1c9bdd1bd8dbdb60921b6064820152608401610218565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156104fe576040516001600160a01b0384169082156108fc029083906000818181858888f193505050501580156104f8573d6000803e3d6000fd5b50610512565b6105126001600160a01b03831684836109d9565b604080516001600160a01b038086168252841660208201529081018290527f1e34c1aee8e83c2dcc14c21bb4bfeea7f46c0c998cb797ac7cc4d7a18f5c656b9060600160405180910390a1505050565b6001600160a01b038516158061057f57506001600160a01b038416155b8061059157506001600160a01b038316155b156105af5760405163d92e233d60e01b815260040160405180910390fd5b816105cd57604051631f2a200560e01b815260040160405180910390fd5b806105eb57604051631f2a200560e01b815260040160405180910390fd5b5050505050565b600080806106038460048188610dfe565b8101906106109190610ef5565b925092509250886001600160a01b031682606001516001600160a01b03161415806106515750876001600160a01b031682600001516001600160a01b031614155b806106725750866001600160a01b031682602001516001600160a01b031614155b80610681575085826080015114155b80610691575060048260c0015114155b156106af5760405163e625f81360e01b815260040160405180910390fd5b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000602483015289169063095ea7b390604401602060405180830381600087803b15801561071957600080fd5b505af115801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190610ffc565b5060405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820188905289169063095ea7b390604401602060405180830381600087803b1580156107bc57600080fd5b505af11580156107d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f49190610ffc565b50604051623e012960e91b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637c025200906108449086908690869060040161107a565b6040805180830381600087803b15801561085d57600080fd5b505af1158015610871573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610895919061113d565b5050505050505050505050565b60018054600080546001600160a01b03199081166001600160a01b0384161782559091169091556040517f7880f0fcc848e1f26e461654b100a69f8d0641e29aa29f6596c6afadbb36b5ea9190a1565b6001600160a01b0381166109665760405162461bcd60e51b815260206004820152603560248201527f676f7665726e61626c652f70656e64696e672d676f7665726e6f722d73686f756044820152746c642d6e6f742d62652d7a65726f2d61646472657360581b6064820152608401610218565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f56bddfa0cee9697cebddf9acd7f23dc6583663b05e007b877056d05017994def906020016102cc565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261022c92869291600091610a69918516908490610ae6565b80519091501561022c5780806020019051810190610a879190610ffc565b61022c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610218565b6060610af58484600085610afd565b949350505050565b606082471015610b5e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610218565b843b610bac5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610218565b600080866001600160a01b03168587604051610bc89190611161565b60006040518083038185875af1925050503d8060008114610c05576040519150601f19603f3d011682016040523d82523d6000602084013e610c0a565b606091505b5091509150610c1a828286610c25565b979650505050505050565b60608315610c345750816109d2565b825115610c445782518084602001fd5b8160405162461bcd60e51b8152600401610218919061117d565b6001600160a01b03811681146103bd57600080fd5b8035610c7e81610c5e565b919050565b600080600060608486031215610c9857600080fd5b8335610ca381610c5e565b92506020840135610cb381610c5e565b929592945050506040919091013590565b600060208284031215610cd657600080fd5b81356109d281610c5e565b600080600080600080600060c0888a031215610cfc57600080fd5b8735610d0781610c5e565b96506020880135610d1781610c5e565b95506040880135610d2781610c5e565b9450606088013593506080880135925060a088013567ffffffffffffffff80821115610d5257600080fd5b818a0191508a601f830112610d6657600080fd5b813581811115610d7557600080fd5b8b6020828501011115610d8757600080fd5b60208301945080935050505092959891949750929550565b6020810160028310610dc157634e487b7160e01b600052602160045260246000fd5b91905290565b60208082526018908201527f676f7665726e61626c652f6f6e6c792d676f7665726e6f720000000000000000604082015260600190565b60008085851115610e0e57600080fd5b83861115610e1b57600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610e6257610e62610e28565b60405290565b600082601f830112610e7957600080fd5b813567ffffffffffffffff80821115610e9457610e94610e28565b604051601f8301601f19908116603f01168101908282118183101715610ebc57610ebc610e28565b81604052838152866020858801011115610ed557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610f0a57600080fd5b8335610f1581610c5e565b9250602084013567ffffffffffffffff80821115610f3257600080fd5b908501906101008288031215610f4757600080fd5b610f4f610e3e565b610f5883610c73565b8152610f6660208401610c73565b6020820152610f7760408401610c73565b6040820152610f8860608401610c73565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013582811115610fbd57600080fd5b610fc989828601610e68565b60e08301525093506040860135915080821115610fe557600080fd5b50610ff286828701610e68565b9150509250925092565b60006020828403121561100e57600080fd5b815180151581146109d257600080fd5b60005b83811015611039578181015183820152602001611021565b83811115611048576000848401525b50505050565b6000815180845261106681602086016020860161101e565b601f01601f19169290920160200192915050565b6001600160a01b038481168252606060208084018290528551909216908301528301516000906110b560808401826001600160a01b03169052565b5060408401516001600160a01b03811660a08401525060608401516001600160a01b03811660c084015250608084015160e083015260a0840151610100818185015260c086015161012085015260e08601519150806101408501525061111f61016084018261104e565b90508281036040840152611133818561104e565b9695505050505050565b6000806040838503121561115057600080fd5b505080516020909101519092909150565b6000825161117381846020870161101e565b9190910192915050565b6020815260006109d2602083018461104e56fea2646970667358221220f95aa6faa851718bb5e6e9a4f1b4cd6e48fb38330ce96cc7e1782065a240ce7664736f6c63430008090033';

type OneInchAggregatorSwapperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: OneInchAggregatorSwapperConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OneInchAggregatorSwapper__factory extends ContractFactory {
  constructor(...args: OneInchAggregatorSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'OneInchAggregatorSwapper';
  }

  deploy(
    _governor: string,
    _tradeFactory: string,
    _aggregationRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OneInchAggregatorSwapper> {
    return super.deploy(_governor, _tradeFactory, _aggregationRouter, overrides || {}) as Promise<OneInchAggregatorSwapper>;
  }
  getDeployTransaction(
    _governor: string,
    _tradeFactory: string,
    _aggregationRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_governor, _tradeFactory, _aggregationRouter, overrides || {});
  }
  attach(address: string): OneInchAggregatorSwapper {
    return super.attach(address) as OneInchAggregatorSwapper;
  }
  connect(signer: Signer): OneInchAggregatorSwapper__factory {
    return super.connect(signer) as OneInchAggregatorSwapper__factory;
  }
  static readonly contractName: 'OneInchAggregatorSwapper';
  public readonly contractName: 'OneInchAggregatorSwapper';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OneInchAggregatorSwapperInterface {
    return new utils.Interface(_abi) as OneInchAggregatorSwapperInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OneInchAggregatorSwapper {
    return new Contract(address, _abi, signerOrProvider) as OneInchAggregatorSwapper;
  }
}
