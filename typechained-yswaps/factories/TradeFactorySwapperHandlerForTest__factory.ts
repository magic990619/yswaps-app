/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { TradeFactorySwapperHandlerForTest, TradeFactorySwapperHandlerForTestInterface } from '../TradeFactorySwapperHandlerForTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_masterAdmin',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_swapperAdder',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_swapperSetter',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidSwapper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotAsyncSwapper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSyncSwapper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SwapperInUse',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MASTER_ADMIN',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SWAPPER_ADDER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SWAPPER_SETTER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'addSwapperInternal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
    ],
    name: 'addSwapperToStrategyInternal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '__swappers',
        type: 'address[]',
      },
    ],
    name: 'addSwappers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'isSwapper',
    outputs: [
      {
        internalType: 'bool',
        name: '_isSwapper',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
    ],
    name: 'removeSwapperFromStrategyInternal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'removeSwapperInternal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '__swappers',
        type: 'address[]',
      },
    ],
    name: 'removeSwappers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_strategy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'setStrategySyncSwapper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'strategySyncSwapper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_swapper',
        type: 'address',
      },
    ],
    name: 'swapperStrategies',
    outputs: [
      {
        internalType: 'address[]',
        name: '_strategies',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'swappers',
    outputs: [
      {
        internalType: 'address[]',
        name: '_swappersList',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620014c6380380620014c68339810160408190526200003491620002a2565b8181846001600160a01b0381166200005f5760405163d92e233d60e01b815260040160405180910390fd5b6200007a600080516020620014a6833981519152806200018a565b62000095600080516020620014a683398151915282620001d5565b506001600160a01b0382161580620000b457506001600160a01b038116155b15620000d35760405163d92e233d60e01b815260040160405180910390fd5b620000fd60008051602062001486833981519152600080516020620014a68339815191526200018a565b620001387fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b911600080516020620014a68339815191526200018a565b620001536000805160206200148683398151915283620001d5565b6200017f7fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b91182620001d5565b5050505050620002ec565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b620001e18282620001e5565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620001e1576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620002413390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b80516001600160a01b03811681146200029d57600080fd5b919050565b600080600060608486031215620002b857600080fd5b620002c38462000285565b9250620002d36020850162000285565b9150620002e36040850162000285565b90509250925092565b61118a80620002fc6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063907ab008116100b8578063cbf8e6c41161007c578063cbf8e6c4146102b8578063ccf61a41146102c0578063d547741f14610301578063e454a5ed14610314578063f1071c811461033b578063f7bd381f1461034e57600080fd5b8063907ab0081461026457806391d1485414610277578063a217fddf1461028a578063b64230ba14610292578063bc90fa03146102a557600080fd5b80634a2c1bab116100ff5780634a2c1bab146101d05780634d1dd98f146101e3578063504254911461020a578063687020d81461022a578063851b32881461025157600080fd5b806301ffc9a71461013c578063248a9ca3146101645780632f2ff15d1461019557806336568abe146101aa5780633c8888fa146101bd575b600080fd5b61014f61014a366004610d8f565b610361565b60405190151581526020015b60405180910390f35b610187610172366004610db9565b60009081526020819052604090206001015490565b60405190815260200161015b565b6101a86101a3366004610dee565b610398565b005b6101a86101b8366004610dee565b6103c3565b6101a86101cb366004610e1a565b610446565b6101a86101de366004610e5a565b610468565b6101877fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b91181565b61021d610218366004610f1f565b61052c565b60405161015b9190610f3a565b6101877f038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd981565b6101a861025f366004610f1f565b610550565b6101a8610272366004610e5a565b61055b565b61014f610285366004610dee565b610639565b610187600081565b61014f6102a0366004610f1f565b610662565b6101a86102b3366004610e1a565b61066f565b61021d610691565b6102e96102ce366004610f1f565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161015b565b6101a861030f366004610dee565b6106a2565b6101877f0b43cb2c88b4e8fc5d4ac1352ba889b22584df0c58c4b5b589731a1c9f6f29d381565b6101a8610349366004610f1f565b6106c8565b6101a861035c366004610e1a565b6106d3565b60006001600160e01b03198216637965db0b60e01b148061039257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152602081905260409020600101546103b4813361089e565b6103be8383610902565b505050565b6001600160a01b03811633146104385760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6104428282610986565b5050565b6001600160a01b03821660009081526003602052604090206103be90826109eb565b7f038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd9610493813361089e565b60005b82518110156103be5760006001600160a01b03168382815181106104bc576104bc610f87565b60200260200101516001600160a01b031614156104ec5760405163d92e233d60e01b815260040160405180910390fd5b61051983828151811061050157610501610f87565b602002602001015160016109eb90919063ffffffff16565b508061052481610fb3565b915050610496565b6001600160a01b038116600090815260036020526040902060609061039290610a07565b610442600182610a14565b7f038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd9610586813361089e565b60005b82518110156103be5760006105da600360008685815181106105ad576105ad610f87565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020610a29565b11156105f9576040516361c45a0f60e01b815260040160405180910390fd5b61062683828151811061060e5761060e610f87565b60200260200101516001610a1490919063ffffffff16565b508061063181610fb3565b915050610589565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000610392600183610a33565b6001600160a01b03821660009081526003602052604090206103be9082610a14565b606061069d6001610a07565b905090565b6000828152602081905260409020600101546106be813361089e565b6103be8383610986565b6104426001826109eb565b7fe39dc63caee7a15eb0ffb77a826d10c23d40b5f7182b000737ab5c078838b9116106fe813361089e565b6001600160a01b038316158061071b57506001600160a01b038216155b156107395760405163d92e233d60e01b815260040160405180910390fd5b6001826001600160a01b031663cd985af06040518163ffffffff1660e01b815260040160206040518083038186803b15801561077457600080fd5b505afa158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac9190610fe4565b60018111156107bd576107bd610fce565b146107db57604051634b3d6f3360e11b815260040160405180910390fd5b6107e6600183610a33565b610803576040516364a7bd4d60e11b815260040160405180910390fd5b6001600160a01b038381166000908152600460205260409020541615610856576001600160a01b03808416600090815260046020908152604080832054909316825260039052206108549084610a14565b505b6001600160a01b03838116600090815260046020908152604080832080546001600160a01b0319169487169485179055928252600390522061089890846109eb565b50505050565b6108a88282610639565b610442576108c0816001600160a01b03166014610a55565b6108cb836020610a55565b6040516020016108dc929190611031565b60408051601f198184030181529082905262461bcd60e51b825261042f916004016110a6565b61090c8282610639565b610442576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556109423390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6109908282610639565b15610442576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610a00836001600160a01b038416610bf1565b9392505050565b60606000610a0083610c40565b6000610a00836001600160a01b038416610c9c565b6000610392825490565b6001600160a01b03811660009081526001830160205260408120541515610a00565b60606000610a648360026110d9565b610a6f9060026110f8565b67ffffffffffffffff811115610a8757610a87610e44565b6040519080825280601f01601f191660200182016040528015610ab1576020820181803683370190505b509050600360fc1b81600081518110610acc57610acc610f87565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610afb57610afb610f87565b60200101906001600160f81b031916908160001a9053506000610b1f8460026110d9565b610b2a9060016110f8565b90505b6001811115610ba2576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610b5e57610b5e610f87565b1a60f81b828281518110610b7457610b74610f87565b60200101906001600160f81b031916908160001a90535060049490941c93610b9b81611110565b9050610b2d565b508315610a005760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161042f565b6000818152600183016020526040812054610c3857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610392565b506000610392565b606081600001805480602002602001604051908101604052809291908181526020018280548015610c9057602002820191906000526020600020905b815481526020019060010190808311610c7c575b50505050509050919050565b60008181526001830160205260408120548015610d85576000610cc0600183611127565b8554909150600090610cd490600190611127565b9050818114610d39576000866000018281548110610cf457610cf4610f87565b9060005260206000200154905080876000018481548110610d1757610d17610f87565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d4a57610d4a61113e565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610392565b6000915050610392565b600060208284031215610da157600080fd5b81356001600160e01b031981168114610a0057600080fd5b600060208284031215610dcb57600080fd5b5035919050565b80356001600160a01b0381168114610de957600080fd5b919050565b60008060408385031215610e0157600080fd5b82359150610e1160208401610dd2565b90509250929050565b60008060408385031215610e2d57600080fd5b610e3683610dd2565b9150610e1160208401610dd2565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610e6d57600080fd5b823567ffffffffffffffff80821115610e8557600080fd5b818501915085601f830112610e9957600080fd5b813581811115610eab57610eab610e44565b8060051b604051601f19603f83011681018181108582111715610ed057610ed0610e44565b604052918252848201925083810185019188831115610eee57600080fd5b938501935b82851015610f1357610f0485610dd2565b84529385019392850192610ef3565b98975050505050505050565b600060208284031215610f3157600080fd5b610a0082610dd2565b6020808252825182820181905260009190848201906040850190845b81811015610f7b5783516001600160a01b031683529284019291840191600101610f56565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610fc757610fc7610f9d565b5060010190565b634e487b7160e01b600052602160045260246000fd5b600060208284031215610ff657600080fd5b815160028110610a0057600080fd5b60005b83811015611020578181015183820152602001611008565b838111156108985750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611069816017850160208801611005565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161109a816028840160208801611005565b01602801949350505050565b60208152600082518060208401526110c5816040850160208701611005565b601f01601f19169190910160400192915050565b60008160001904831182151516156110f3576110f3610f9d565b500290565b6000821982111561110b5761110b610f9d565b500190565b60008161111f5761111f610f9d565b506000190190565b60008282101561113957611139610f9d565b500390565b634e487b7160e01b600052603160045260246000fdfea26469706673582212200a0417705dcb150265c27d9a336e96653d98cb39488082c60a8eddfc84679f3a64736f6c63430008090033038c8d5a0695aa8e4bf7e2d14cb85443db816cf8bdf8985d9f1a65519aeb6cd90b43cb2c88b4e8fc5d4ac1352ba889b22584df0c58c4b5b589731a1c9f6f29d3';

type TradeFactorySwapperHandlerForTestConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: TradeFactorySwapperHandlerForTestConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class TradeFactorySwapperHandlerForTest__factory extends ContractFactory {
  constructor(...args: TradeFactorySwapperHandlerForTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'TradeFactorySwapperHandlerForTest';
  }

  deploy(
    _masterAdmin: string,
    _swapperAdder: string,
    _swapperSetter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TradeFactorySwapperHandlerForTest> {
    return super.deploy(_masterAdmin, _swapperAdder, _swapperSetter, overrides || {}) as Promise<TradeFactorySwapperHandlerForTest>;
  }
  getDeployTransaction(
    _masterAdmin: string,
    _swapperAdder: string,
    _swapperSetter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_masterAdmin, _swapperAdder, _swapperSetter, overrides || {});
  }
  attach(address: string): TradeFactorySwapperHandlerForTest {
    return super.attach(address) as TradeFactorySwapperHandlerForTest;
  }
  connect(signer: Signer): TradeFactorySwapperHandlerForTest__factory {
    return super.connect(signer) as TradeFactorySwapperHandlerForTest__factory;
  }
  static readonly contractName: 'TradeFactorySwapperHandlerForTest';
  public readonly contractName: 'TradeFactorySwapperHandlerForTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TradeFactorySwapperHandlerForTestInterface {
    return new utils.Interface(_abi) as TradeFactorySwapperHandlerForTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TradeFactorySwapperHandlerForTest {
    return new Contract(address, _abi, signerOrProvider) as TradeFactorySwapperHandlerForTest;
  }
}
